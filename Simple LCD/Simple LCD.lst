

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Nov 05 14:12:58 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_Init_lcd
    43                           	FNCALL	_main,_ADC_Init
    44                           	FNCALL	_main,_Thermal_Init
    45                           	FNCALL	_main,_Write_data_struct
    46                           	FNCALL	_main,_Sound
    47                           	FNCALL	_main,_Clear_display
    48                           	FNCALL	_main,_Write_data
    49                           	FNCALL	_main,_ADC_Read
    50                           	FNCALL	_main,_Write_voltage
    51                           	FNCALL	_Write_voltage,_Write_data
    52                           	FNCALL	_Write_voltage,_Write_digits
    53                           	FNCALL	_Write_digits,_Write_data
    54                           	FNCALL	_Init_lcd,_Clear_display
    55                           	FNROOT	_main
    56                           	global	_a
    57                           	global	_ADCON0
    58                           psect	text280,local,class=CODE,delta=2
    59                           global __ptext280
    60  0000                     __ptext280:
    61  001F                     _ADCON0	set	31
    62                           	global	_ADRESH
    63  001E                     _ADRESH	set	30
    64                           	global	_PORTA
    65  0005                     _PORTA	set	5
    66                           	global	_PORTB
    67  0006                     _PORTB	set	6
    68                           	global	_PORTC
    69  0007                     _PORTC	set	7
    70                           	global	_PORTD
    71  0008                     _PORTD	set	8
    72                           	global	_CARRY
    73  0018                     _CARRY	set	24
    74                           	global	_GIE
    75  005F                     _GIE	set	95
    76                           	global	_GO_nDONE
    77  00FA                     _GO_nDONE	set	250
    78                           	global	_RA4
    79  002C                     _RA4	set	44
    80                           	global	_RB0
    81  0030                     _RB0	set	48
    82                           	global	_RC2
    83  003A                     _RC2	set	58
    84                           	global	_ADCON1
    85  009F                     _ADCON1	set	159
    86                           	global	_ADRESL
    87  009E                     _ADRESL	set	158
    88                           	global	_TRISA
    89  0085                     _TRISA	set	133
    90                           	global	_TRISB
    91  0086                     _TRISB	set	134
    92                           	global	_TRISC
    93  0087                     _TRISC	set	135
    94                           	global	_TRISD
    95  0088                     _TRISD	set	136
    96                           	global	_EEADR
    97  010D                     _EEADR	set	269
    98                           	global	_EEDATA
    99  010C                     _EEDATA	set	268
   100                           	global	_EECON1
   101  018C                     _EECON1	set	396
   102                           	global	_EECON2
   103  018D                     _EECON2	set	397
   104                           	global	_RD
   105  0C60                     _RD	set	3168
   106                           	global	_WR
   107  0C61                     _WR	set	3169
   108                           	global	_WREN
   109  0C62                     _WREN	set	3170
   110                           	file	"Simple LCD.as"
   111                           	line	#
   112                           psect cinit,class=CODE,delta=2
   113                           global start_initialization
   114  03C1                     start_initialization:
   115                           
   116                           psect	bssBANK0,class=BANK0,space=1
   117                           global __pbssBANK0
   118  0020                     __pbssBANK0:
   119  0020                     _a:
   120  0020                            ds      2
   121                           
   122                           ; Clear objects allocated to BANK0
   123                           psect cinit,class=CODE,delta=2
   124  03C1  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   125  03C2  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   126                           psect cinit,class=CODE,delta=2
   127                           global end_of_initialization
   128                           
   129                           ;End of C runtime variable initialization code
   130                           
   131  03C3                     end_of_initialization:
   132  03C3  0183               clrf status
   133  03C4  120A  118A  2D31   ljmp _main	;jump to C main() function
   134                           psect	cstackCOMMON,class=COMMON,space=1
   135                           global __pcstackCOMMON
   136  0070                     __pcstackCOMMON:
   137                           	global	?_Init_lcd
   138  0070                     ?_Init_lcd:	; 0 bytes @ 0x0
   139                           	global	?_ADC_Init
   140  0070                     ?_ADC_Init:	; 0 bytes @ 0x0
   141                           	global	??_ADC_Init
   142  0070                     ??_ADC_Init:	; 0 bytes @ 0x0
   143                           	global	?_Write_data_struct
   144  0070                     ?_Write_data_struct:	; 0 bytes @ 0x0
   145                           	global	??_Write_data_struct
   146  0070                     ??_Write_data_struct:	; 0 bytes @ 0x0
   147                           	global	?_Sound
   148  0070                     ?_Sound:	; 0 bytes @ 0x0
   149                           	global	??_Sound
   150  0070                     ??_Sound:	; 0 bytes @ 0x0
   151                           	global	?_Clear_display
   152  0070                     ?_Clear_display:	; 0 bytes @ 0x0
   153                           	global	??_Clear_display
   154  0070                     ??_Clear_display:	; 0 bytes @ 0x0
   155                           	global	?_Write_data
   156  0070                     ?_Write_data:	; 0 bytes @ 0x0
   157                           	global	?_Thermal_Init
   158  0070                     ?_Thermal_Init:	; 0 bytes @ 0x0
   159                           	global	??_Thermal_Init
   160  0070                     ??_Thermal_Init:	; 0 bytes @ 0x0
   161                           	global	?_main
   162  0070                     ?_main:	; 0 bytes @ 0x0
   163                           	global	?_ADC_Read
   164  0070                     ?_ADC_Read:	; 2 bytes @ 0x0
   165                           	global	Write_data@lb
   166  0070                     Write_data@lb:	; 1 bytes @ 0x0
   167  0070                     	ds	1
   168                           	global	??_Write_data
   169  0071                     ??_Write_data:	; 0 bytes @ 0x1
   170  0071                     	ds	1
   171                           	global	??_Init_lcd
   172  0072                     ??_Init_lcd:	; 0 bytes @ 0x2
   173                           	global	??_ADC_Read
   174  0072                     ??_ADC_Read:	; 0 bytes @ 0x2
   175                           	global	Write_data_struct@chardata
   176  0072                     Write_data_struct@chardata:	; 1 bytes @ 0x2
   177                           	global	Sound@i
   178  0072                     Sound@i:	; 2 bytes @ 0x2
   179  0072                     	ds	1
   180                           	global	Write_data@hb
   181  0073                     Write_data@hb:	; 1 bytes @ 0x3
   182  0073                     	ds	1
   183                           	global	?_Write_digits
   184  0074                     ?_Write_digits:	; 0 bytes @ 0x4
   185                           	global	ADC_Read@channel
   186  0074                     ADC_Read@channel:	; 1 bytes @ 0x4
   187                           	global	Write_digits@adc_measurement
   188  0074                     Write_digits@adc_measurement:	; 2 bytes @ 0x4
   189  0074                     	ds	2
   190                           	global	??_Write_digits
   191  0076                     ??_Write_digits:	; 0 bytes @ 0x6
   192  0076                     	ds	1
   193                           	global	?_Write_voltage
   194  0077                     ?_Write_voltage:	; 0 bytes @ 0x7
   195                           	global	Write_voltage@adc_measurement
   196  0077                     Write_voltage@adc_measurement:	; 2 bytes @ 0x7
   197  0077                     	ds	2
   198                           	global	??_Write_voltage
   199  0079                     ??_Write_voltage:	; 0 bytes @ 0x9
   200  0079                     	ds	1
   201                           	global	??_main
   202  007A                     ??_main:	; 0 bytes @ 0xA
   203  007A                     	ds	1
   204                           	global	main@char_c
   205  007B                     main@char_c:	; 1 bytes @ 0xB
   206  007B                     	ds	1
   207                           	global	main@charWritten
   208  007C                     main@charWritten:	; 2 bytes @ 0xC
   209  007C                     	ds	2
   210 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
   211 ;;Auto spaces:   Size  Autos    Used
   212 ;; COMMON          14     14      14
   213 ;; BANK0           80      0       2
   214 ;; BANK1           80      0       0
   215 ;; BANK3           96      0       0
   216 ;; BANK2           96      0       0
   217                           
   218 ;;
   219 ;; Pointer list with targets:
   220                           
   221 ;; ?_ADC_Read	unsigned int  size(1) Largest target is 0
   222 ;;
   223                           
   224                           
   225 ;;
   226 ;; Critical Paths under _main in COMMON
   227 ;;
   228 ;;   _main->_Write_voltage
   229 ;;   _Write_voltage->_Write_digits
   230 ;;   _Write_digits->_Write_data
   231 ;;   _Init_lcd->_Clear_display
   232 ;;
   233 ;; Critical Paths under _main in BANK0
   234 ;;
   235 ;;   None.
   236 ;;
   237 ;; Critical Paths under _main in BANK1
   238 ;;
   239 ;;   None.
   240 ;;
   241 ;; Critical Paths under _main in BANK3
   242 ;;
   243 ;;   None.
   244 ;;
   245 ;; Critical Paths under _main in BANK2
   246 ;;
   247 ;;   None.
   248                           
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   251 ;;
   252                           
   253 ;;
   254 ;;Call Graph Tables:
   255 ;;
   256 ;; ---------------------------------------------------------------------------------
   257 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   258 ;; ---------------------------------------------------------------------------------
   259 ;; (0) _main                                                 4     4      0     843
   260 ;;                                             10 COMMON     4     4      0
   261 ;;                           _Init_lcd
   262 ;;                           _ADC_Init
   263 ;;                       _Thermal_Init
   264 ;;                  _Write_data_struct
   265 ;;                              _Sound
   266 ;;                      _Clear_display
   267 ;;                         _Write_data
   268 ;;                           _ADC_Read
   269 ;;                      _Write_voltage
   270 ;; ---------------------------------------------------------------------------------
   271 ;; (1) _Write_voltage                                        3     1      2     638
   272 ;;                                              7 COMMON     3     1      2
   273 ;;                         _Write_data
   274 ;;                       _Write_digits
   275 ;; ---------------------------------------------------------------------------------
   276 ;; (2) _Write_digits                                         3     1      2     264
   277 ;;                                              4 COMMON     3     1      2
   278 ;;                         _Write_data
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (1) _Init_lcd                                             2     2      0       0
   281 ;;                                              2 COMMON     2     2      0
   282 ;;                      _Clear_display
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (1) _ADC_Read                                             5     3      2      22
   285 ;;                                              0 COMMON     5     3      2
   286 ;; ---------------------------------------------------------------------------------
   287 ;; (3) _Write_data                                           4     3      1      44
   288 ;;                                              0 COMMON     4     3      1
   289 ;; ---------------------------------------------------------------------------------
   290 ;; (1) _Clear_display                                        2     2      0       0
   291 ;;                                              0 COMMON     2     2      0
   292 ;; ---------------------------------------------------------------------------------
   293 ;; (1) _Sound                                                4     4      0      24
   294 ;;                                              0 COMMON     4     4      0
   295 ;; ---------------------------------------------------------------------------------
   296 ;; (1) _Write_data_struct                                    3     3      0      44
   297 ;;                                              0 COMMON     3     3      0
   298 ;; ---------------------------------------------------------------------------------
   299 ;; (1) _Thermal_Init                                         1     1      0       0
   300 ;;                                              0 COMMON     1     1      0
   301 ;; ---------------------------------------------------------------------------------
   302 ;; (1) _ADC_Init                                             0     0      0       0
   303 ;; ---------------------------------------------------------------------------------
   304 ;; Estimated maximum stack depth 3
   305 ;; ---------------------------------------------------------------------------------
   306                           
   307 ;; Call Graph Graphs:
   308                           
   309 ;; _main (ROOT)
   310 ;;   _Init_lcd
   311 ;;     _Clear_display
   312 ;;   _ADC_Init
   313 ;;   _Thermal_Init
   314 ;;   _Write_data_struct
   315 ;;   _Sound
   316 ;;   _Clear_display
   317 ;;   _Write_data
   318 ;;   _ADC_Read
   319 ;;   _Write_voltage
   320 ;;     _Write_data
   321 ;;     _Write_digits
   322 ;;       _Write_data
   323 ;;
   324                           
   325 ;; Address spaces:
   326                           
   327 ;;Name               Size   Autos  Total    Cost      Usage
   328 ;;BITCOMMON            E      0       0       0        0.0%
   329 ;;EEDATA             100      0       0       0        0.0%
   330 ;;NULL                 0      0       0       0        0.0%
   331 ;;CODE                 0      0       0       0        0.0%
   332 ;;COMMON               E      E       E       1      100.0%
   333 ;;BITSFR0              0      0       0       1        0.0%
   334 ;;SFR0                 0      0       0       1        0.0%
   335 ;;BITSFR1              0      0       0       2        0.0%
   336 ;;SFR1                 0      0       0       2        0.0%
   337 ;;STACK                0      0       3       2        0.0%
   338 ;;ABS                  0      0      10       3        0.0%
   339 ;;BITBANK0            50      0       0       4        0.0%
   340 ;;BITSFR3              0      0       0       4        0.0%
   341 ;;SFR3                 0      0       0       4        0.0%
   342 ;;BANK0               50      0       2       5        2.5%
   343 ;;BITSFR2              0      0       0       5        0.0%
   344 ;;SFR2                 0      0       0       5        0.0%
   345 ;;BITBANK1            50      0       0       6        0.0%
   346 ;;BANK1               50      0       0       7        0.0%
   347 ;;BITBANK3            60      0       0       8        0.0%
   348 ;;BANK3               60      0       0       9        0.0%
   349 ;;BITBANK2            60      0       0      10        0.0%
   350 ;;BANK2               60      0       0      11        0.0%
   351 ;;DATA                 0      0      13      12        0.0%
   352                           
   353                           	global	_main
   354                           psect	maintext,global,class=CODE,delta=2
   355                           global __pmaintext
   356  0531                     __pmaintext:
   357                           
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 15 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\main.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  char_c          1   11[COMMON] struct byte_struct
   365 ;;  charWritten     2   12[COMMON] int 
   366 ;; Return value:  Size  Location     Type
   367 ;;		None               void
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 17F/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         3       0       0       0       0
   377 ;;      Temps:          1       0       0       0       0
   378 ;;      Totals:         4       0       0       0       0
   379 ;;Total ram usage:        4 bytes
   380 ;; Hardware stack levels required when called:    3
   381 ;; This function calls:
   382 ;;		_Init_lcd
   383 ;;		_ADC_Init
   384 ;;		_Thermal_Init
   385 ;;		_Write_data_struct
   386 ;;		_Sound
   387 ;;		_Clear_display
   388 ;;		_Write_data
   389 ;;		_ADC_Read
   390 ;;		_Write_voltage
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           psect	maintext
   396                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\main.c"
   397                           	line	15
   398                           	global	__size_of_main
   399  00D3                     	__size_of_main	equ	__end_of_main-_main
   400                           	
   401  0531                     _main:	
   402                           	opt	stack 5
   403                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   404                           	line	19
   405                           	
   406  0531                     l4950:	
   407                           ;main.c: 19: TRISB = 0x01;
   408  0531  3001               	movlw	(01h)
   409  0532  1683               	bsf	status, 5	;RP0=1, select bank1
   410  0533  1303               	bcf	status, 6	;RP1=0, select bank1
   411  0534  0086               	movwf	(134)^080h	;volatile
   412                           	line	20
   413                           ;main.c: 20: PORTB = 0x9;
   414  0535  3009               	movlw	(09h)
   415  0536  1283               	bcf	status, 5	;RP0=0, select bank0
   416  0537  1303               	bcf	status, 6	;RP1=0, select bank0
   417  0538  0086               	movwf	(6)	;volatile
   418                           	line	23
   419                           	
   420  0539                     l4952:	
   421                           ;main.c: 23: TRISC = 0b00000;
   422  0539  1683               	bsf	status, 5	;RP0=1, select bank1
   423  053A  1303               	bcf	status, 6	;RP1=0, select bank1
   424  053B  0187               	clrf	(135)^080h	;volatile
   425                           	line	24
   426                           	
   427  053C                     l4954:	
   428                           ;main.c: 24: PORTC = 0b11000;
   429  053C  3018               	movlw	(018h)
   430  053D  1283               	bcf	status, 5	;RP0=0, select bank0
   431  053E  1303               	bcf	status, 6	;RP1=0, select bank0
   432  053F  0087               	movwf	(7)	;volatile
   433                           	line	27
   434                           	
   435  0540                     l4956:	
   436                           ;main.c: 27: TRISA = 0b00010001;
   437  0540  3011               	movlw	(011h)
   438  0541  1683               	bsf	status, 5	;RP0=1, select bank1
   439  0542  1303               	bcf	status, 6	;RP1=0, select bank1
   440  0543  0085               	movwf	(133)^080h	;volatile
   441                           	line	30
   442                           	
   443  0544                     l4958:	
   444                           ;main.c: 30: TRISD = 0;
   445  0544  0188               	clrf	(136)^080h	;volatile
   446                           	line	33
   447                           	
   448  0545                     l4960:	
   449                           ;main.c: 33: Init_lcd();
   450  0545  120A  118A  2441   	fcall	_Init_lcd
              120A  118A         
   451                           	line	36
   452                           	
   453  054A                     l4962:	
   454                           ;main.c: 36: ADC_Init();
   455  054A  120A  118A  23C7   	fcall	_ADC_Init
              120A  118A         
   456                           	line	39
   457                           	
   458  054F                     l4964:	
   459                           ;main.c: 39: Thermal_Init();
   460  054F  120A  118A  24A8   	fcall	_Thermal_Init
              120A  118A         
   461                           	line	46
   462                           	
   463  0554                     l4966:	
   464                           ;main.c: 46: int charWritten = 0;
   465  0554  01FC               	clrf	(main@charWritten)
   466  0555  01FD               	clrf	(main@charWritten+1)
   467  0556  2D57               	goto	l4968
   468                           	line	47
   469                           ;main.c: 47: while(1)
   470                           	
   471  0557                     l664:	
   472                           	line	50
   473                           	
   474  0557                     l4968:	
   475                           ;main.c: 48: {
   476                           ;main.c: 50: if(RA4 == 0 && charWritten == 0)
   477  0557  1283               	bcf	status, 5	;RP0=0, select bank0
   478  0558  1303               	bcf	status, 6	;RP1=0, select bank0
   479  0559  1A05               	btfsc	(44/8),(44)&7
   480  055A  2D5C               	goto	u2731
   481  055B  2D5D               	goto	u2730
   482  055C                     u2731:
   483  055C  2D7B               	goto	l4980
   484  055D                     u2730:
   485                           	
   486  055D                     l4970:	
   487  055D  087D               	movf	((main@charWritten+1)),w
   488  055E  047C               	iorwf	((main@charWritten)),w
   489  055F  1D03               	skipz
   490  0560  2D62               	goto	u2741
   491  0561  2D63               	goto	u2740
   492  0562                     u2741:
   493  0562  2D7B               	goto	l4980
   494  0563                     u2740:
   495                           	line	53
   496                           	
   497  0563                     l4972:	
   498                           ;main.c: 51: {
   499                           ;main.c: 52: struct byte_struct char_c;
   500                           ;main.c: 53: char_c.hb = 0b0100;
   501  0563  087B               	movf	(main@char_c),w
   502  0564  39F0               	andlw	not (((1<<4)-1)<<0)
   503  0565  3804               	iorlw	(04h & ((1<<4)-1))<<0
   504  0566  00FB               	movwf	(main@char_c)
   505                           	line	54
   506                           ;main.c: 54: char_c.lb = 0b0011;
   507  0567  087B               	movf	(main@char_c),w
   508  0568  390F               	andlw	not (((1<<4)-1)<<4)
   509  0569  3830               	iorlw	(03h & ((1<<4)-1))<<4
   510  056A  00FB               	movwf	(main@char_c)
   511                           	line	56
   512                           	
   513  056B                     l4974:	
   514                           ;main.c: 56: Write_data_struct(char_c);
   515  056B  087B               	movf	(main@char_c),w
   516  056C  120A  118A  23FE   	fcall	_Write_data_struct
              120A  118A         
   517                           	line	58
   518                           	
   519  0571                     l4976:	
   520                           ;main.c: 58: Sound();
   521  0571  120A  118A  2419   	fcall	_Sound
              120A  118A         
   522                           	line	59
   523                           	
   524  0576                     l4978:	
   525                           ;main.c: 59: charWritten = 1;
   526  0576  3001               	movlw	low(01h)
   527  0577  00FC               	movwf	(main@charWritten)
   528  0578  3000               	movlw	high(01h)
   529  0579  00FD               	movwf	((main@charWritten))+1
   530  057A  2D7B               	goto	l4980
   531                           	line	60
   532                           	
   533  057B                     l665:	
   534                           	line	62
   535                           	
   536  057B                     l4980:	
   537                           ;main.c: 60: }
   538                           ;main.c: 62: if(charWritten == 1 && RA4 == 1)
   539  057B  3001               	movlw	01h
   540  057C  067C               	xorwf	(main@charWritten),w
   541  057D  047D               	iorwf	(main@charWritten+1),w
   542  057E  1D03               	skipz
   543  057F  2D81               	goto	u2751
   544  0580  2D82               	goto	u2750
   545  0581                     u2751:
   546  0581  2D8B               	goto	l4986
   547  0582                     u2750:
   548                           	
   549  0582                     l4982:	
   550  0582  1283               	bcf	status, 5	;RP0=0, select bank0
   551  0583  1303               	bcf	status, 6	;RP1=0, select bank0
   552  0584  1E05               	btfss	(44/8),(44)&7
   553  0585  2D87               	goto	u2761
   554  0586  2D88               	goto	u2760
   555  0587                     u2761:
   556  0587  2D8B               	goto	l4986
   557  0588                     u2760:
   558                           	line	64
   559                           	
   560  0588                     l4984:	
   561                           ;main.c: 63: {
   562                           ;main.c: 64: charWritten = 0;
   563  0588  01FC               	clrf	(main@charWritten)
   564  0589  01FD               	clrf	(main@charWritten+1)
   565  058A  2D8B               	goto	l4986
   566                           	line	65
   567                           	
   568  058B                     l666:	
   569                           	line	67
   570                           	
   571  058B                     l4986:	
   572                           ;main.c: 65: }
   573                           ;main.c: 67: if(RB0 == 0)
   574  058B  1283               	bcf	status, 5	;RP0=0, select bank0
   575  058C  1303               	bcf	status, 6	;RP1=0, select bank0
   576  058D  1806               	btfsc	(48/8),(48)&7
   577  058E  2D90               	goto	u2771
   578  058F  2D91               	goto	u2770
   579  0590                     u2771:
   580  0590  2D57               	goto	l4968
   581  0591                     u2770:
   582                           	line	69
   583                           	
   584  0591                     l4988:	
   585                           ;main.c: 68: {
   586                           ;main.c: 69: Clear_display();
   587  0591  120A  118A  23D0   	fcall	_Clear_display
              120A  118A         
   588                           	line	70
   589                           ;main.c: 70: Write_data(0b0101, 0b0110);
   590  0596  3006               	movlw	(06h)
   591  0597  00FA               	movwf	(??_main+0)+0
   592  0598  087A               	movf	(??_main+0)+0,w
   593  0599  00F0               	movwf	(?_Write_data)
   594  059A  3005               	movlw	(05h)
   595  059B  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   596                           	line	71
   597                           ;main.c: 71: Write_data(0b0100, 0b1111);
   598  05A0  300F               	movlw	(0Fh)
   599  05A1  00FA               	movwf	(??_main+0)+0
   600  05A2  087A               	movf	(??_main+0)+0,w
   601  05A3  00F0               	movwf	(?_Write_data)
   602  05A4  3004               	movlw	(04h)
   603  05A5  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   604                           	line	72
   605                           ;main.c: 72: Write_data(0b0100, 0b1100);
   606  05AA  300C               	movlw	(0Ch)
   607  05AB  00FA               	movwf	(??_main+0)+0
   608  05AC  087A               	movf	(??_main+0)+0,w
   609  05AD  00F0               	movwf	(?_Write_data)
   610  05AE  3004               	movlw	(04h)
   611  05AF  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   612                           	line	73
   613                           ;main.c: 73: Write_data(0b0101, 0b0100);
   614  05B4  3004               	movlw	(04h)
   615  05B5  00FA               	movwf	(??_main+0)+0
   616  05B6  087A               	movf	(??_main+0)+0,w
   617  05B7  00F0               	movwf	(?_Write_data)
   618  05B8  3005               	movlw	(05h)
   619  05B9  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   620                           	line	74
   621                           ;main.c: 74: Write_data(0b0100, 0b0001);
   622  05BE  01F0               	clrf	(?_Write_data)
   623  05BF  1403               	bsf	status,0
   624  05C0  0DF0               	rlf	(?_Write_data),f
   625  05C1  3004               	movlw	(04h)
   626  05C2  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   627                           	line	75
   628                           ;main.c: 75: Write_data(0b0100, 0b0111);
   629  05C7  3007               	movlw	(07h)
   630  05C8  00FA               	movwf	(??_main+0)+0
   631  05C9  087A               	movf	(??_main+0)+0,w
   632  05CA  00F0               	movwf	(?_Write_data)
   633  05CB  3004               	movlw	(04h)
   634  05CC  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   635                           	line	76
   636                           ;main.c: 76: Write_data(0b0100, 0b0101);
   637  05D1  3005               	movlw	(05h)
   638  05D2  00FA               	movwf	(??_main+0)+0
   639  05D3  087A               	movf	(??_main+0)+0,w
   640  05D4  00F0               	movwf	(?_Write_data)
   641  05D5  3004               	movlw	(04h)
   642  05D6  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   643                           	line	77
   644                           ;main.c: 77: Write_data(0b0011, 0b1101);
   645  05DB  300D               	movlw	(0Dh)
   646  05DC  00FA               	movwf	(??_main+0)+0
   647  05DD  087A               	movf	(??_main+0)+0,w
   648  05DE  00F0               	movwf	(?_Write_data)
   649  05DF  3003               	movlw	(03h)
   650  05E0  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   651                           	line	79
   652                           	
   653  05E5                     l4990:	
   654                           ;main.c: 79: a = ADC_Read(0);
   655  05E5  3000               	movlw	(0)
   656  05E6  120A  118A  2470   	fcall	_ADC_Read
              120A  118A         
   657  05EB  0871               	movf	(1+(?_ADC_Read)),w
   658  05EC  1283               	bcf	status, 5	;RP0=0, select bank0
   659  05ED  1303               	bcf	status, 6	;RP1=0, select bank0
   660  05EE  01A1               	clrf	(_a+1)
   661  05EF  07A1               	addwf	(_a+1)
   662  05F0  0870               	movf	(0+(?_ADC_Read)),w
   663  05F1  01A0               	clrf	(_a)
   664  05F2  07A0               	addwf	(_a)
   665                           
   666                           	line	81
   667                           	
   668  05F3                     l4992:	
   669                           ;main.c: 81: Write_voltage(a);
   670  05F3  0821               	movf	(_a+1),w
   671  05F4  01F8               	clrf	(?_Write_voltage+1)
   672  05F5  07F8               	addwf	(?_Write_voltage+1)
   673  05F6  0820               	movf	(_a),w
   674  05F7  01F7               	clrf	(?_Write_voltage)
   675  05F8  07F7               	addwf	(?_Write_voltage)
   676                           
   677  05F9  120A  118A  26FB   	fcall	_Write_voltage
              120A  118A         
   678  05FE  2D57               	goto	l4968
   679                           	line	82
   680                           	
   681  05FF                     l667:	
   682  05FF  2D57               	goto	l4968
   683                           	line	83
   684                           	
   685  0600                     l668:	
   686                           	line	47
   687  0600  2D57               	goto	l4968
   688                           	
   689  0601                     l669:	
   690                           	line	96
   691                           	
   692  0601                     l670:	
   693                           	global	start
   694  0601  120A  118A  2800   	ljmp	start
   695                           	opt stack 0
   696                           GLOBAL	__end_of_main
   697  0604                     	__end_of_main:
   698 ;; =============== function _main ends ============
   699                           
   700                           	signat	_main,88
   701                           	global	_Write_voltage
   702                           psect	text281,local,class=CODE,delta=2
   703                           global __ptext281
   704  06FB                     __ptext281:
   705                           
   706 ;; *************** function _Write_voltage *****************
   707 ;; Defined at:
   708 ;;		line 123 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  adc_measurem    2    7[COMMON] int 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         2       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0
   724 ;;      Temps:          1       0       0       0       0
   725 ;;      Totals:         3       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    2
   729 ;; This function calls:
   730 ;;		_Write_data
   731 ;;		_Write_digits
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           psect	text281
   737                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
   738                           	line	123
   739                           	global	__size_of_Write_voltage
   740  0105                     	__size_of_Write_voltage	equ	__end_of_Write_voltage-_Write_voltage
   741                           	
   742  06FB                     _Write_voltage:	
   743                           	opt	stack 5
   744                           ; Regs used in _Write_voltage: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   745                           	line	128
   746                           	
   747  06FB                     l4908:	
   748                           ;LCD.c: 128: if(adc_measurement < 200)
   749  06FB  0878               	movf	(Write_voltage@adc_measurement+1),w
   750  06FC  3A80               	xorlw	80h
   751  06FD  00FF               	movwf	btemp+1
   752  06FE  3080               	movlw	(high(0C8h))^80h
   753  06FF  027F               	subwf	btemp+1,w
   754  0700  1D03               	skipz
   755  0701  2F04               	goto	u2635
   756  0702  30C8               	movlw	low(0C8h)
   757  0703  0277               	subwf	(Write_voltage@adc_measurement),w
   758  0704                     u2635:
   759                           
   760  0704  1803               	skipnc
   761  0705  2F07               	goto	u2631
   762  0706  2F08               	goto	u2630
   763  0707                     u2631:
   764  0707  2F1B               	goto	l4914
   765  0708                     u2630:
   766                           	line	130
   767                           	
   768  0708                     l4910:	
   769                           ;LCD.c: 129: {
   770                           ;LCD.c: 130: Write_data(0b0011,0b0000);
   771  0708  01F0               	clrf	(?_Write_data)
   772  0709  3003               	movlw	(03h)
   773  070A  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   774                           	line	131
   775                           	
   776  070F                     l4912:	
   777                           ;LCD.c: 131: Write_digits(adc_measurement);
   778  070F  0878               	movf	(Write_voltage@adc_measurement+1),w
   779  0710  01F5               	clrf	(?_Write_digits+1)
   780  0711  07F5               	addwf	(?_Write_digits+1)
   781  0712  0877               	movf	(Write_voltage@adc_measurement),w
   782  0713  01F4               	clrf	(?_Write_digits)
   783  0714  07F4               	addwf	(?_Write_digits)
   784                           
   785  0715  120A  118A  2604   	fcall	_Write_digits
              120A  118A         
   786                           	line	132
   787                           ;LCD.c: 132: }
   788  071A  2FFF               	goto	l2007
   789                           	line	133
   790                           	
   791  071B                     l1996:	
   792                           	
   793  071B                     l4914:	
   794                           ;LCD.c: 133: else if(adc_measurement > 200 && adc_measurement < 400)
   795  071B  0878               	movf	(Write_voltage@adc_measurement+1),w
   796  071C  3A80               	xorlw	80h
   797  071D  00FF               	movwf	btemp+1
   798  071E  3080               	movlw	(high(0C9h))^80h
   799  071F  027F               	subwf	btemp+1,w
   800  0720  1D03               	skipz
   801  0721  2F24               	goto	u2645
   802  0722  30C9               	movlw	low(0C9h)
   803  0723  0277               	subwf	(Write_voltage@adc_measurement),w
   804  0724                     u2645:
   805                           
   806  0724  1C03               	skipc
   807  0725  2F27               	goto	u2641
   808  0726  2F28               	goto	u2640
   809  0727                     u2641:
   810  0727  2F4C               	goto	l4922
   811  0728                     u2640:
   812                           	
   813  0728                     l4916:	
   814  0728  0878               	movf	(Write_voltage@adc_measurement+1),w
   815  0729  3A80               	xorlw	80h
   816  072A  00FF               	movwf	btemp+1
   817  072B  3081               	movlw	(high(0190h))^80h
   818  072C  027F               	subwf	btemp+1,w
   819  072D  1D03               	skipz
   820  072E  2F31               	goto	u2655
   821  072F  3090               	movlw	low(0190h)
   822  0730  0277               	subwf	(Write_voltage@adc_measurement),w
   823  0731                     u2655:
   824                           
   825  0731  1803               	skipnc
   826  0732  2F34               	goto	u2651
   827  0733  2F35               	goto	u2650
   828  0734                     u2651:
   829  0734  2F4C               	goto	l4922
   830  0735                     u2650:
   831                           	line	135
   832                           	
   833  0735                     l4918:	
   834                           ;LCD.c: 134: {
   835                           ;LCD.c: 135: Write_data(0b0011,0b0001);
   836  0735  01F0               	clrf	(?_Write_data)
   837  0736  1403               	bsf	status,0
   838  0737  0DF0               	rlf	(?_Write_data),f
   839  0738  3003               	movlw	(03h)
   840  0739  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   841                           	line	136
   842                           	
   843  073E                     l4920:	
   844                           ;LCD.c: 136: Write_digits((adc_measurement-200));
   845  073E  0877               	movf	(Write_voltage@adc_measurement),w
   846  073F  3E38               	addlw	low(-200)
   847  0740  00F4               	movwf	(?_Write_digits)
   848  0741  0878               	movf	(Write_voltage@adc_measurement+1),w
   849  0742  1803               	skipnc
   850  0743  3E01               	addlw	1
   851  0744  3EFF               	addlw	high(-200)
   852  0745  00F5               	movwf	1+(?_Write_digits)
   853  0746  120A  118A  2604   	fcall	_Write_digits
              120A  118A         
   854                           	line	137
   855                           ;LCD.c: 137: }
   856  074B  2FFF               	goto	l2007
   857                           	line	138
   858                           	
   859  074C                     l1998:	
   860                           	
   861  074C                     l4922:	
   862                           ;LCD.c: 138: else if(adc_measurement > 400 && adc_measurement < 600)
   863  074C  0878               	movf	(Write_voltage@adc_measurement+1),w
   864  074D  3A80               	xorlw	80h
   865  074E  00FF               	movwf	btemp+1
   866  074F  3081               	movlw	(high(0191h))^80h
   867  0750  027F               	subwf	btemp+1,w
   868  0751  1D03               	skipz
   869  0752  2F55               	goto	u2665
   870  0753  3091               	movlw	low(0191h)
   871  0754  0277               	subwf	(Write_voltage@adc_measurement),w
   872  0755                     u2665:
   873                           
   874  0755  1C03               	skipc
   875  0756  2F58               	goto	u2661
   876  0757  2F59               	goto	u2660
   877  0758                     u2661:
   878  0758  2F7E               	goto	l4930
   879  0759                     u2660:
   880                           	
   881  0759                     l4924:	
   882  0759  0878               	movf	(Write_voltage@adc_measurement+1),w
   883  075A  3A80               	xorlw	80h
   884  075B  00FF               	movwf	btemp+1
   885  075C  3082               	movlw	(high(0258h))^80h
   886  075D  027F               	subwf	btemp+1,w
   887  075E  1D03               	skipz
   888  075F  2F62               	goto	u2675
   889  0760  3058               	movlw	low(0258h)
   890  0761  0277               	subwf	(Write_voltage@adc_measurement),w
   891  0762                     u2675:
   892                           
   893  0762  1803               	skipnc
   894  0763  2F65               	goto	u2671
   895  0764  2F66               	goto	u2670
   896  0765                     u2671:
   897  0765  2F7E               	goto	l4930
   898  0766                     u2670:
   899                           	line	140
   900                           	
   901  0766                     l4926:	
   902                           ;LCD.c: 139: {
   903                           ;LCD.c: 140: Write_data(0b0011,0b0010);
   904  0766  3002               	movlw	(02h)
   905  0767  00F9               	movwf	(??_Write_voltage+0)+0
   906  0768  0879               	movf	(??_Write_voltage+0)+0,w
   907  0769  00F0               	movwf	(?_Write_data)
   908  076A  3003               	movlw	(03h)
   909  076B  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   910                           	line	141
   911                           	
   912  0770                     l4928:	
   913                           ;LCD.c: 141: Write_digits((adc_measurement-400));
   914  0770  0877               	movf	(Write_voltage@adc_measurement),w
   915  0771  3E70               	addlw	low(-400)
   916  0772  00F4               	movwf	(?_Write_digits)
   917  0773  0878               	movf	(Write_voltage@adc_measurement+1),w
   918  0774  1803               	skipnc
   919  0775  3E01               	addlw	1
   920  0776  3EFE               	addlw	high(-400)
   921  0777  00F5               	movwf	1+(?_Write_digits)
   922  0778  120A  118A  2604   	fcall	_Write_digits
              120A  118A         
   923                           	line	142
   924                           ;LCD.c: 142: }
   925  077D  2FFF               	goto	l2007
   926                           	line	143
   927                           	
   928  077E                     l2000:	
   929                           	
   930  077E                     l4930:	
   931                           ;LCD.c: 143: else if(adc_measurement > 600 && adc_measurement < 800)
   932  077E  0878               	movf	(Write_voltage@adc_measurement+1),w
   933  077F  3A80               	xorlw	80h
   934  0780  00FF               	movwf	btemp+1
   935  0781  3082               	movlw	(high(0259h))^80h
   936  0782  027F               	subwf	btemp+1,w
   937  0783  1D03               	skipz
   938  0784  2F87               	goto	u2685
   939  0785  3059               	movlw	low(0259h)
   940  0786  0277               	subwf	(Write_voltage@adc_measurement),w
   941  0787                     u2685:
   942                           
   943  0787  1C03               	skipc
   944  0788  2F8A               	goto	u2681
   945  0789  2F8B               	goto	u2680
   946  078A                     u2681:
   947  078A  2FB0               	goto	l4938
   948  078B                     u2680:
   949                           	
   950  078B                     l4932:	
   951  078B  0878               	movf	(Write_voltage@adc_measurement+1),w
   952  078C  3A80               	xorlw	80h
   953  078D  00FF               	movwf	btemp+1
   954  078E  3083               	movlw	(high(0320h))^80h
   955  078F  027F               	subwf	btemp+1,w
   956  0790  1D03               	skipz
   957  0791  2F94               	goto	u2695
   958  0792  3020               	movlw	low(0320h)
   959  0793  0277               	subwf	(Write_voltage@adc_measurement),w
   960  0794                     u2695:
   961                           
   962  0794  1803               	skipnc
   963  0795  2F97               	goto	u2691
   964  0796  2F98               	goto	u2690
   965  0797                     u2691:
   966  0797  2FB0               	goto	l4938
   967  0798                     u2690:
   968                           	line	145
   969                           	
   970  0798                     l4934:	
   971                           ;LCD.c: 144: {
   972                           ;LCD.c: 145: Write_data(0b0011,0b0011);
   973  0798  3003               	movlw	(03h)
   974  0799  00F9               	movwf	(??_Write_voltage+0)+0
   975  079A  0879               	movf	(??_Write_voltage+0)+0,w
   976  079B  00F0               	movwf	(?_Write_data)
   977  079C  3003               	movlw	(03h)
   978  079D  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
   979                           	line	146
   980                           	
   981  07A2                     l4936:	
   982                           ;LCD.c: 146: Write_digits((adc_measurement-600));
   983  07A2  0877               	movf	(Write_voltage@adc_measurement),w
   984  07A3  3EA8               	addlw	low(-600)
   985  07A4  00F4               	movwf	(?_Write_digits)
   986  07A5  0878               	movf	(Write_voltage@adc_measurement+1),w
   987  07A6  1803               	skipnc
   988  07A7  3E01               	addlw	1
   989  07A8  3EFD               	addlw	high(-600)
   990  07A9  00F5               	movwf	1+(?_Write_digits)
   991  07AA  120A  118A  2604   	fcall	_Write_digits
              120A  118A         
   992                           	line	147
   993                           ;LCD.c: 147: }
   994  07AF  2FFF               	goto	l2007
   995                           	line	148
   996                           	
   997  07B0                     l2002:	
   998                           	
   999  07B0                     l4938:	
  1000                           ;LCD.c: 148: else if(adc_measurement > 800 & adc_measurement < 1000)
  1001  07B0  0878               	movf	(Write_voltage@adc_measurement+1),w
  1002  07B1  3A80               	xorlw	80h
  1003  07B2  00FF               	movwf	btemp+1
  1004  07B3  3083               	movlw	(high(0321h))^80h
  1005  07B4  027F               	subwf	btemp+1,w
  1006  07B5  1D03               	skipz
  1007  07B6  2FB9               	goto	u2705
  1008  07B7  3021               	movlw	low(0321h)
  1009  07B8  0277               	subwf	(Write_voltage@adc_measurement),w
  1010  07B9                     u2705:
  1011                           
  1012  07B9  1C03               	skipc
  1013  07BA  2FBC               	goto	u2701
  1014  07BB  2FBD               	goto	u2700
  1015  07BC                     u2701:
  1016  07BC  2FE2               	goto	l4946
  1017  07BD                     u2700:
  1018                           	
  1019  07BD                     l4940:	
  1020  07BD  0878               	movf	(Write_voltage@adc_measurement+1),w
  1021  07BE  3A80               	xorlw	80h
  1022  07BF  00FF               	movwf	btemp+1
  1023  07C0  3083               	movlw	(high(03E8h))^80h
  1024  07C1  027F               	subwf	btemp+1,w
  1025  07C2  1D03               	skipz
  1026  07C3  2FC6               	goto	u2715
  1027  07C4  30E8               	movlw	low(03E8h)
  1028  07C5  0277               	subwf	(Write_voltage@adc_measurement),w
  1029  07C6                     u2715:
  1030                           
  1031  07C6  1803               	skipnc
  1032  07C7  2FC9               	goto	u2711
  1033  07C8  2FCA               	goto	u2710
  1034  07C9                     u2711:
  1035  07C9  2FE2               	goto	l4946
  1036  07CA                     u2710:
  1037                           	line	150
  1038                           	
  1039  07CA                     l4942:	
  1040                           ;LCD.c: 149: {
  1041                           ;LCD.c: 150: Write_data(0b0011,0b0100);
  1042  07CA  3004               	movlw	(04h)
  1043  07CB  00F9               	movwf	(??_Write_voltage+0)+0
  1044  07CC  0879               	movf	(??_Write_voltage+0)+0,w
  1045  07CD  00F0               	movwf	(?_Write_data)
  1046  07CE  3003               	movlw	(03h)
  1047  07CF  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1048                           	line	151
  1049                           	
  1050  07D4                     l4944:	
  1051                           ;LCD.c: 151: Write_digits((adc_measurement-800));
  1052  07D4  0877               	movf	(Write_voltage@adc_measurement),w
  1053  07D5  3EE0               	addlw	low(-800)
  1054  07D6  00F4               	movwf	(?_Write_digits)
  1055  07D7  0878               	movf	(Write_voltage@adc_measurement+1),w
  1056  07D8  1803               	skipnc
  1057  07D9  3E01               	addlw	1
  1058  07DA  3EFC               	addlw	high(-800)
  1059  07DB  00F5               	movwf	1+(?_Write_digits)
  1060  07DC  120A  118A  2604   	fcall	_Write_digits
              120A  118A         
  1061                           	line	152
  1062                           ;LCD.c: 152: }
  1063  07E1  2FFF               	goto	l2007
  1064                           	line	153
  1065                           	
  1066  07E2                     l2004:	
  1067                           	
  1068  07E2                     l4946:	
  1069                           ;LCD.c: 153: else if(adc_measurement > 1000)
  1070  07E2  0878               	movf	(Write_voltage@adc_measurement+1),w
  1071  07E3  3A80               	xorlw	80h
  1072  07E4  00FF               	movwf	btemp+1
  1073  07E5  3083               	movlw	(high(03E9h))^80h
  1074  07E6  027F               	subwf	btemp+1,w
  1075  07E7  1D03               	skipz
  1076  07E8  2FEB               	goto	u2725
  1077  07E9  30E9               	movlw	low(03E9h)
  1078  07EA  0277               	subwf	(Write_voltage@adc_measurement),w
  1079  07EB                     u2725:
  1080                           
  1081  07EB  1C03               	skipc
  1082  07EC  2FEE               	goto	u2721
  1083  07ED  2FEF               	goto	u2720
  1084  07EE                     u2721:
  1085  07EE  2FFF               	goto	l2007
  1086  07EF                     u2720:
  1087                           	line	155
  1088                           	
  1089  07EF                     l4948:	
  1090                           ;LCD.c: 154: {
  1091                           ;LCD.c: 155: Write_data(0b0011,0b0101);
  1092  07EF  3005               	movlw	(05h)
  1093  07F0  00F9               	movwf	(??_Write_voltage+0)+0
  1094  07F1  0879               	movf	(??_Write_voltage+0)+0,w
  1095  07F2  00F0               	movwf	(?_Write_data)
  1096  07F3  3003               	movlw	(03h)
  1097  07F4  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1098  07F9  2FFF               	goto	l2007
  1099                           	line	156
  1100                           	
  1101  07FA                     l2006:	
  1102  07FA  2FFF               	goto	l2007
  1103                           	line	157
  1104                           	
  1105  07FB                     l2005:	
  1106  07FB  2FFF               	goto	l2007
  1107                           	
  1108  07FC                     l2003:	
  1109  07FC  2FFF               	goto	l2007
  1110                           	
  1111  07FD                     l2001:	
  1112  07FD  2FFF               	goto	l2007
  1113                           	
  1114  07FE                     l1999:	
  1115  07FE  2FFF               	goto	l2007
  1116                           	
  1117  07FF                     l1997:	
  1118                           	
  1119  07FF                     l2007:	
  1120  07FF  0008               	return
  1121                           	opt stack 0
  1122                           GLOBAL	__end_of_Write_voltage
  1123  0800                     	__end_of_Write_voltage:
  1124 ;; =============== function _Write_voltage ends ============
  1125                           
  1126                           	signat	_Write_voltage,4216
  1127                           	global	_Write_digits
  1128                           psect	text282,local,class=CODE,delta=2
  1129                           global __ptext282
  1130  0604                     __ptext282:
  1131                           
  1132 ;; *************** function _Write_digits *****************
  1133 ;; Defined at:
  1134 ;;		line 77 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  adc_measurem    2    4[COMMON] int 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;		None               void
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         2       0       0       0       0
  1149 ;;      Locals:         0       0       0       0       0
  1150 ;;      Temps:          1       0       0       0       0
  1151 ;;      Totals:         3       0       0       0       0
  1152 ;;Total ram usage:        3 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		_Write_data
  1157 ;; This function is called by:
  1158 ;;		_Write_voltage
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           psect	text282
  1162                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1163                           	line	77
  1164                           	global	__size_of_Write_digits
  1165  00F7                     	__size_of_Write_digits	equ	__end_of_Write_digits-_Write_digits
  1166                           	
  1167  0604                     _Write_digits:	
  1168                           	opt	stack 5
  1169                           ; Regs used in _Write_digits: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1170                           	line	78
  1171                           	
  1172  0604                     l4868:	
  1173                           ;LCD.c: 78: Write_data(0b0010,0b1100);
  1174  0604  300C               	movlw	(0Ch)
  1175  0605  00F6               	movwf	(??_Write_digits+0)+0
  1176  0606  0876               	movf	(??_Write_digits+0)+0,w
  1177  0607  00F0               	movwf	(?_Write_data)
  1178  0608  3002               	movlw	(02h)
  1179  0609  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1180                           	line	80
  1181                           	
  1182  060E                     l4870:	
  1183                           ;LCD.c: 80: if(adc_measurement > 180)
  1184  060E  0875               	movf	(Write_digits@adc_measurement+1),w
  1185  060F  3A80               	xorlw	80h
  1186  0610  00FF               	movwf	btemp+1
  1187  0611  3080               	movlw	(high(0B5h))^80h
  1188  0612  027F               	subwf	btemp+1,w
  1189  0613  1D03               	skipz
  1190  0614  2E17               	goto	u2535
  1191  0615  30B5               	movlw	low(0B5h)
  1192  0616  0274               	subwf	(Write_digits@adc_measurement),w
  1193  0617                     u2535:
  1194                           
  1195  0617  1C03               	skipc
  1196  0618  2E1A               	goto	u2531
  1197  0619  2E1B               	goto	u2530
  1198  061A                     u2531:
  1199  061A  2E26               	goto	l4874
  1200  061B                     u2530:
  1201                           	line	82
  1202                           	
  1203  061B                     l4872:	
  1204                           ;LCD.c: 81: {
  1205                           ;LCD.c: 82: Write_data(0b0011, 0b1001);
  1206  061B  3009               	movlw	(09h)
  1207  061C  00F6               	movwf	(??_Write_digits+0)+0
  1208  061D  0876               	movf	(??_Write_digits+0)+0,w
  1209  061E  00F0               	movwf	(?_Write_data)
  1210  061F  3003               	movlw	(03h)
  1211  0620  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1212                           	line	83
  1213                           ;LCD.c: 83: }
  1214  0625  2EFA               	goto	l1993
  1215                           	line	84
  1216                           	
  1217  0626                     l1974:	
  1218                           	
  1219  0626                     l4874:	
  1220                           ;LCD.c: 84: else if(adc_measurement > 160)
  1221  0626  0875               	movf	(Write_digits@adc_measurement+1),w
  1222  0627  3A80               	xorlw	80h
  1223  0628  00FF               	movwf	btemp+1
  1224  0629  3080               	movlw	(high(0A1h))^80h
  1225  062A  027F               	subwf	btemp+1,w
  1226  062B  1D03               	skipz
  1227  062C  2E2F               	goto	u2545
  1228  062D  30A1               	movlw	low(0A1h)
  1229  062E  0274               	subwf	(Write_digits@adc_measurement),w
  1230  062F                     u2545:
  1231                           
  1232  062F  1C03               	skipc
  1233  0630  2E32               	goto	u2541
  1234  0631  2E33               	goto	u2540
  1235  0632                     u2541:
  1236  0632  2E3E               	goto	l4878
  1237  0633                     u2540:
  1238                           	line	86
  1239                           	
  1240  0633                     l4876:	
  1241                           ;LCD.c: 85: {
  1242                           ;LCD.c: 86: Write_data(0b0011, 0b1000);
  1243  0633  3008               	movlw	(08h)
  1244  0634  00F6               	movwf	(??_Write_digits+0)+0
  1245  0635  0876               	movf	(??_Write_digits+0)+0,w
  1246  0636  00F0               	movwf	(?_Write_data)
  1247  0637  3003               	movlw	(03h)
  1248  0638  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1249                           	line	87
  1250                           ;LCD.c: 87: }
  1251  063D  2EFA               	goto	l1993
  1252                           	line	88
  1253                           	
  1254  063E                     l1976:	
  1255                           	
  1256  063E                     l4878:	
  1257                           ;LCD.c: 88: else if(adc_measurement > 140)
  1258  063E  0875               	movf	(Write_digits@adc_measurement+1),w
  1259  063F  3A80               	xorlw	80h
  1260  0640  00FF               	movwf	btemp+1
  1261  0641  3080               	movlw	(high(08Dh))^80h
  1262  0642  027F               	subwf	btemp+1,w
  1263  0643  1D03               	skipz
  1264  0644  2E47               	goto	u2555
  1265  0645  308D               	movlw	low(08Dh)
  1266  0646  0274               	subwf	(Write_digits@adc_measurement),w
  1267  0647                     u2555:
  1268                           
  1269  0647  1C03               	skipc
  1270  0648  2E4A               	goto	u2551
  1271  0649  2E4B               	goto	u2550
  1272  064A                     u2551:
  1273  064A  2E56               	goto	l4882
  1274  064B                     u2550:
  1275                           	line	90
  1276                           	
  1277  064B                     l4880:	
  1278                           ;LCD.c: 89: {
  1279                           ;LCD.c: 90: Write_data(0b0011, 0b0111);
  1280  064B  3007               	movlw	(07h)
  1281  064C  00F6               	movwf	(??_Write_digits+0)+0
  1282  064D  0876               	movf	(??_Write_digits+0)+0,w
  1283  064E  00F0               	movwf	(?_Write_data)
  1284  064F  3003               	movlw	(03h)
  1285  0650  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1286                           	line	91
  1287                           ;LCD.c: 91: }
  1288  0655  2EFA               	goto	l1993
  1289                           	line	92
  1290                           	
  1291  0656                     l1978:	
  1292                           	
  1293  0656                     l4882:	
  1294                           ;LCD.c: 92: else if(adc_measurement > 120)
  1295  0656  0875               	movf	(Write_digits@adc_measurement+1),w
  1296  0657  3A80               	xorlw	80h
  1297  0658  00FF               	movwf	btemp+1
  1298  0659  3080               	movlw	(high(079h))^80h
  1299  065A  027F               	subwf	btemp+1,w
  1300  065B  1D03               	skipz
  1301  065C  2E5F               	goto	u2565
  1302  065D  3079               	movlw	low(079h)
  1303  065E  0274               	subwf	(Write_digits@adc_measurement),w
  1304  065F                     u2565:
  1305                           
  1306  065F  1C03               	skipc
  1307  0660  2E62               	goto	u2561
  1308  0661  2E63               	goto	u2560
  1309  0662                     u2561:
  1310  0662  2E6E               	goto	l4886
  1311  0663                     u2560:
  1312                           	line	94
  1313                           	
  1314  0663                     l4884:	
  1315                           ;LCD.c: 93: {
  1316                           ;LCD.c: 94: Write_data(0b0011, 0b0110);
  1317  0663  3006               	movlw	(06h)
  1318  0664  00F6               	movwf	(??_Write_digits+0)+0
  1319  0665  0876               	movf	(??_Write_digits+0)+0,w
  1320  0666  00F0               	movwf	(?_Write_data)
  1321  0667  3003               	movlw	(03h)
  1322  0668  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1323                           	line	95
  1324                           ;LCD.c: 95: }
  1325  066D  2EFA               	goto	l1993
  1326                           	line	96
  1327                           	
  1328  066E                     l1980:	
  1329                           	
  1330  066E                     l4886:	
  1331                           ;LCD.c: 96: else if(adc_measurement > 100)
  1332  066E  0875               	movf	(Write_digits@adc_measurement+1),w
  1333  066F  3A80               	xorlw	80h
  1334  0670  00FF               	movwf	btemp+1
  1335  0671  3080               	movlw	(high(065h))^80h
  1336  0672  027F               	subwf	btemp+1,w
  1337  0673  1D03               	skipz
  1338  0674  2E77               	goto	u2575
  1339  0675  3065               	movlw	low(065h)
  1340  0676  0274               	subwf	(Write_digits@adc_measurement),w
  1341  0677                     u2575:
  1342                           
  1343  0677  1C03               	skipc
  1344  0678  2E7A               	goto	u2571
  1345  0679  2E7B               	goto	u2570
  1346  067A                     u2571:
  1347  067A  2E86               	goto	l4890
  1348  067B                     u2570:
  1349                           	line	98
  1350                           	
  1351  067B                     l4888:	
  1352                           ;LCD.c: 97: {
  1353                           ;LCD.c: 98: Write_data(0b0011, 0b0101);
  1354  067B  3005               	movlw	(05h)
  1355  067C  00F6               	movwf	(??_Write_digits+0)+0
  1356  067D  0876               	movf	(??_Write_digits+0)+0,w
  1357  067E  00F0               	movwf	(?_Write_data)
  1358  067F  3003               	movlw	(03h)
  1359  0680  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1360                           	line	99
  1361                           ;LCD.c: 99: }
  1362  0685  2EFA               	goto	l1993
  1363                           	line	100
  1364                           	
  1365  0686                     l1982:	
  1366                           	
  1367  0686                     l4890:	
  1368                           ;LCD.c: 100: else if(adc_measurement > 80)
  1369  0686  0875               	movf	(Write_digits@adc_measurement+1),w
  1370  0687  3A80               	xorlw	80h
  1371  0688  00FF               	movwf	btemp+1
  1372  0689  3080               	movlw	(high(051h))^80h
  1373  068A  027F               	subwf	btemp+1,w
  1374  068B  1D03               	skipz
  1375  068C  2E8F               	goto	u2585
  1376  068D  3051               	movlw	low(051h)
  1377  068E  0274               	subwf	(Write_digits@adc_measurement),w
  1378  068F                     u2585:
  1379                           
  1380  068F  1C03               	skipc
  1381  0690  2E92               	goto	u2581
  1382  0691  2E93               	goto	u2580
  1383  0692                     u2581:
  1384  0692  2E9E               	goto	l4894
  1385  0693                     u2580:
  1386                           	line	102
  1387                           	
  1388  0693                     l4892:	
  1389                           ;LCD.c: 101: {
  1390                           ;LCD.c: 102: Write_data(0b0011, 0b0100);
  1391  0693  3004               	movlw	(04h)
  1392  0694  00F6               	movwf	(??_Write_digits+0)+0
  1393  0695  0876               	movf	(??_Write_digits+0)+0,w
  1394  0696  00F0               	movwf	(?_Write_data)
  1395  0697  3003               	movlw	(03h)
  1396  0698  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1397                           	line	103
  1398                           ;LCD.c: 103: }
  1399  069D  2EFA               	goto	l1993
  1400                           	line	104
  1401                           	
  1402  069E                     l1984:	
  1403                           	
  1404  069E                     l4894:	
  1405                           ;LCD.c: 104: else if(adc_measurement > 60)
  1406  069E  0875               	movf	(Write_digits@adc_measurement+1),w
  1407  069F  3A80               	xorlw	80h
  1408  06A0  00FF               	movwf	btemp+1
  1409  06A1  3080               	movlw	(high(03Dh))^80h
  1410  06A2  027F               	subwf	btemp+1,w
  1411  06A3  1D03               	skipz
  1412  06A4  2EA7               	goto	u2595
  1413  06A5  303D               	movlw	low(03Dh)
  1414  06A6  0274               	subwf	(Write_digits@adc_measurement),w
  1415  06A7                     u2595:
  1416                           
  1417  06A7  1C03               	skipc
  1418  06A8  2EAA               	goto	u2591
  1419  06A9  2EAB               	goto	u2590
  1420  06AA                     u2591:
  1421  06AA  2EB6               	goto	l4898
  1422  06AB                     u2590:
  1423                           	line	106
  1424                           	
  1425  06AB                     l4896:	
  1426                           ;LCD.c: 105: {
  1427                           ;LCD.c: 106: Write_data(0b0011, 0b0011);
  1428  06AB  3003               	movlw	(03h)
  1429  06AC  00F6               	movwf	(??_Write_digits+0)+0
  1430  06AD  0876               	movf	(??_Write_digits+0)+0,w
  1431  06AE  00F0               	movwf	(?_Write_data)
  1432  06AF  3003               	movlw	(03h)
  1433  06B0  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1434                           	line	107
  1435                           ;LCD.c: 107: }
  1436  06B5  2EFA               	goto	l1993
  1437                           	line	108
  1438                           	
  1439  06B6                     l1986:	
  1440                           	
  1441  06B6                     l4898:	
  1442                           ;LCD.c: 108: else if(adc_measurement > 40)
  1443  06B6  0875               	movf	(Write_digits@adc_measurement+1),w
  1444  06B7  3A80               	xorlw	80h
  1445  06B8  00FF               	movwf	btemp+1
  1446  06B9  3080               	movlw	(high(029h))^80h
  1447  06BA  027F               	subwf	btemp+1,w
  1448  06BB  1D03               	skipz
  1449  06BC  2EBF               	goto	u2605
  1450  06BD  3029               	movlw	low(029h)
  1451  06BE  0274               	subwf	(Write_digits@adc_measurement),w
  1452  06BF                     u2605:
  1453                           
  1454  06BF  1C03               	skipc
  1455  06C0  2EC2               	goto	u2601
  1456  06C1  2EC3               	goto	u2600
  1457  06C2                     u2601:
  1458  06C2  2ECE               	goto	l4902
  1459  06C3                     u2600:
  1460                           	line	110
  1461                           	
  1462  06C3                     l4900:	
  1463                           ;LCD.c: 109: {
  1464                           ;LCD.c: 110: Write_data(0b0011, 0b0010);
  1465  06C3  3002               	movlw	(02h)
  1466  06C4  00F6               	movwf	(??_Write_digits+0)+0
  1467  06C5  0876               	movf	(??_Write_digits+0)+0,w
  1468  06C6  00F0               	movwf	(?_Write_data)
  1469  06C7  3003               	movlw	(03h)
  1470  06C8  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1471                           	line	111
  1472                           ;LCD.c: 111: }
  1473  06CD  2EFA               	goto	l1993
  1474                           	line	112
  1475                           	
  1476  06CE                     l1988:	
  1477                           	
  1478  06CE                     l4902:	
  1479                           ;LCD.c: 112: else if(adc_measurement > 20)
  1480  06CE  0875               	movf	(Write_digits@adc_measurement+1),w
  1481  06CF  3A80               	xorlw	80h
  1482  06D0  00FF               	movwf	btemp+1
  1483  06D1  3080               	movlw	(high(015h))^80h
  1484  06D2  027F               	subwf	btemp+1,w
  1485  06D3  1D03               	skipz
  1486  06D4  2ED7               	goto	u2615
  1487  06D5  3015               	movlw	low(015h)
  1488  06D6  0274               	subwf	(Write_digits@adc_measurement),w
  1489  06D7                     u2615:
  1490                           
  1491  06D7  1C03               	skipc
  1492  06D8  2EDA               	goto	u2611
  1493  06D9  2EDB               	goto	u2610
  1494  06DA                     u2611:
  1495  06DA  2EE5               	goto	l1990
  1496  06DB                     u2610:
  1497                           	line	114
  1498                           	
  1499  06DB                     l4904:	
  1500                           ;LCD.c: 113: {
  1501                           ;LCD.c: 114: Write_data(0b0011, 0b0001);
  1502  06DB  01F0               	clrf	(?_Write_data)
  1503  06DC  1403               	bsf	status,0
  1504  06DD  0DF0               	rlf	(?_Write_data),f
  1505  06DE  3003               	movlw	(03h)
  1506  06DF  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1507                           	line	115
  1508                           ;LCD.c: 115: }
  1509  06E4  2EFA               	goto	l1993
  1510                           	line	116
  1511                           	
  1512  06E5                     l1990:	
  1513                           ;LCD.c: 116: else if(adc_measurement >= 0)
  1514  06E5  1BF5               	btfsc	(Write_digits@adc_measurement+1),7
  1515  06E6  2EE8               	goto	u2621
  1516  06E7  2EE9               	goto	u2620
  1517  06E8                     u2621:
  1518  06E8  2EFA               	goto	l1993
  1519  06E9                     u2620:
  1520                           	line	118
  1521                           	
  1522  06E9                     l4906:	
  1523                           ;LCD.c: 117: {
  1524                           ;LCD.c: 118: Write_data(0b0011, 0b0000);
  1525  06E9  01F0               	clrf	(?_Write_data)
  1526  06EA  3003               	movlw	(03h)
  1527  06EB  120A  118A  23E5   	fcall	_Write_data
              120A  118A         
  1528  06F0  2EFA               	goto	l1993
  1529                           	line	119
  1530                           	
  1531  06F1                     l1992:	
  1532  06F1  2EFA               	goto	l1993
  1533                           	line	120
  1534                           	
  1535  06F2                     l1991:	
  1536  06F2  2EFA               	goto	l1993
  1537                           	
  1538  06F3                     l1989:	
  1539  06F3  2EFA               	goto	l1993
  1540                           	
  1541  06F4                     l1987:	
  1542  06F4  2EFA               	goto	l1993
  1543                           	
  1544  06F5                     l1985:	
  1545  06F5  2EFA               	goto	l1993
  1546                           	
  1547  06F6                     l1983:	
  1548  06F6  2EFA               	goto	l1993
  1549                           	
  1550  06F7                     l1981:	
  1551  06F7  2EFA               	goto	l1993
  1552                           	
  1553  06F8                     l1979:	
  1554  06F8  2EFA               	goto	l1993
  1555                           	
  1556  06F9                     l1977:	
  1557  06F9  2EFA               	goto	l1993
  1558                           	
  1559  06FA                     l1975:	
  1560                           	
  1561  06FA                     l1993:	
  1562  06FA  0008               	return
  1563                           	opt stack 0
  1564                           GLOBAL	__end_of_Write_digits
  1565  06FB                     	__end_of_Write_digits:
  1566 ;; =============== function _Write_digits ends ============
  1567                           
  1568                           	signat	_Write_digits,4216
  1569                           	global	_Init_lcd
  1570                           psect	text283,local,class=CODE,delta=2
  1571                           global __ptext283
  1572  0441                     __ptext283:
  1573                           
  1574 ;; *************** function _Init_lcd *****************
  1575 ;; Defined at:
  1576 ;;		line 26 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;		None               void
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       0       0       0       0
  1591 ;;      Locals:         0       0       0       0       0
  1592 ;;      Temps:          2       0       0       0       0
  1593 ;;      Totals:         2       0       0       0       0
  1594 ;;Total ram usage:        2 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    1
  1597 ;; This function calls:
  1598 ;;		_Clear_display
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           psect	text283
  1604                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1605                           	line	26
  1606                           	global	__size_of_Init_lcd
  1607  002F                     	__size_of_Init_lcd	equ	__end_of_Init_lcd-_Init_lcd
  1608                           	
  1609  0441                     _Init_lcd:	
  1610                           	opt	stack 6
  1611                           ; Regs used in _Init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1612                           	line	28
  1613                           	
  1614  0441                     l4848:	
  1615                           ;LCD.c: 28: PORTA = 0x2;
  1616  0441  3002               	movlw	(02h)
  1617  0442  1283               	bcf	status, 5	;RP0=0, select bank0
  1618  0443  1303               	bcf	status, 6	;RP1=0, select bank0
  1619  0444  0085               	movwf	(5)	;volatile
  1620                           	line	29
  1621                           ;LCD.c: 29: PORTD = 0b0010;
  1622  0445  3002               	movlw	(02h)
  1623  0446  0088               	movwf	(8)	;volatile
  1624                           	line	30
  1625                           	
  1626  0447                     l4850:	
  1627                           ;LCD.c: 30: PORTA = 0x00;
  1628  0447  0185               	clrf	(5)	;volatile
  1629                           	line	31
  1630                           	
  1631  0448                     l4852:	
  1632                           ;LCD.c: 31: PORTA = 0x2;
  1633  0448  3002               	movlw	(02h)
  1634  0449  0085               	movwf	(5)	;volatile
  1635                           	line	32
  1636                           	
  1637  044A                     l4854:	
  1638                           ;LCD.c: 32: PORTD = 0b1000;
  1639  044A  3008               	movlw	(08h)
  1640  044B  0088               	movwf	(8)	;volatile
  1641                           	line	33
  1642                           	
  1643  044C                     l4856:	
  1644                           ;LCD.c: 33: PORTA = 0x00;
  1645  044C  0185               	clrf	(5)	;volatile
  1646                           	line	34
  1647                           ;LCD.c: 34: _delay(20000);
  1648                           	opt asmopt_off
  1649  044D  301A               movlw	26
  1650  044E  00F3               movwf	((??_Init_lcd+0)+0+1),f
  1651  044F  30F8               	movlw	248
  1652  0450  00F2               movwf	((??_Init_lcd+0)+0),f
  1653  0451                     u2787:
  1654  0451  0BF2               	decfsz	((??_Init_lcd+0)+0),f
  1655  0452  2C51               	goto	u2787
  1656  0453  0BF3               	decfsz	((??_Init_lcd+0)+0+1),f
  1657  0454  2C51               	goto	u2787
  1658  0455  0064               	clrwdt
  1659                           opt asmopt_on
  1660                           
  1661                           	line	37
  1662                           ;LCD.c: 37: PORTA = 0x2;
  1663  0456  3002               	movlw	(02h)
  1664  0457  1283               	bcf	status, 5	;RP0=0, select bank0
  1665  0458  1303               	bcf	status, 6	;RP1=0, select bank0
  1666  0459  0085               	movwf	(5)	;volatile
  1667                           	line	38
  1668                           	
  1669  045A                     l4858:	
  1670                           ;LCD.c: 38: PORTD = 0b0000;
  1671  045A  0188               	clrf	(8)	;volatile
  1672                           	line	39
  1673                           	
  1674  045B                     l4860:	
  1675                           ;LCD.c: 39: PORTA = 0x00;
  1676  045B  0185               	clrf	(5)	;volatile
  1677                           	line	40
  1678                           ;LCD.c: 40: PORTA = 0x2;
  1679  045C  3002               	movlw	(02h)
  1680  045D  0085               	movwf	(5)	;volatile
  1681                           	line	41
  1682                           ;LCD.c: 41: PORTD = 0b1111;
  1683  045E  300F               	movlw	(0Fh)
  1684  045F  0088               	movwf	(8)	;volatile
  1685                           	line	42
  1686                           	
  1687  0460                     l4862:	
  1688                           ;LCD.c: 42: PORTA = 0x00;
  1689  0460  0185               	clrf	(5)	;volatile
  1690                           	line	43
  1691                           	
  1692  0461                     l4864:	
  1693                           ;LCD.c: 43: _delay(20000);
  1694                           	opt asmopt_off
  1695  0461  301A               movlw	26
  1696  0462  00F3               movwf	((??_Init_lcd+0)+0+1),f
  1697  0463  30F8               	movlw	248
  1698  0464  00F2               movwf	((??_Init_lcd+0)+0),f
  1699  0465                     u2797:
  1700  0465  0BF2               	decfsz	((??_Init_lcd+0)+0),f
  1701  0466  2C65               	goto	u2797
  1702  0467  0BF3               	decfsz	((??_Init_lcd+0)+0+1),f
  1703  0468  2C65               	goto	u2797
  1704  0469  0064               	clrwdt
  1705                           opt asmopt_on
  1706                           
  1707                           	line	45
  1708                           	
  1709  046A                     l4866:	
  1710                           ;LCD.c: 45: Clear_display();
  1711  046A  120A  118A  23D0   	fcall	_Clear_display
              120A  118A         
  1712                           	line	46
  1713                           	
  1714  046F                     l1965:	
  1715  046F  0008               	return
  1716                           	opt stack 0
  1717                           GLOBAL	__end_of_Init_lcd
  1718  0470                     	__end_of_Init_lcd:
  1719 ;; =============== function _Init_lcd ends ============
  1720                           
  1721                           	signat	_Init_lcd,88
  1722                           	global	_ADC_Read
  1723                           psect	text284,local,class=CODE,delta=2
  1724                           global __ptext284
  1725  0470                     __ptext284:
  1726                           
  1727 ;; *************** function _ADC_Read *****************
  1728 ;; Defined at:
  1729 ;;		line 15 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\ADC.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  channel         1    wreg     unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  channel         1    4[COMMON] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  2    0[COMMON] unsigned int 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, btemp+1
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         2       0       0       0       0
  1744 ;;      Locals:         1       0       0       0       0
  1745 ;;      Temps:          2       0       0       0       0
  1746 ;;      Totals:         5       0       0       0       0
  1747 ;;Total ram usage:        5 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           psect	text284
  1756                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\ADC.c"
  1757                           	line	15
  1758                           	global	__size_of_ADC_Read
  1759  0038                     	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
  1760                           	
  1761  0470                     _ADC_Read:	
  1762                           	opt	stack 7
  1763                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
  1764                           ;ADC_Read@channel stored from wreg
  1765  0470  00F4               	movwf	(ADC_Read@channel)
  1766                           	line	16
  1767                           	
  1768  0471                     l4838:	
  1769                           ;ADC.c: 16: ADCON0 &= 0xC5;
  1770  0471  30C5               	movlw	(0C5h)
  1771  0472  00F2               	movwf	(??_ADC_Read+0)+0
  1772  0473  0872               	movf	(??_ADC_Read+0)+0,w
  1773  0474  1283               	bcf	status, 5	;RP0=0, select bank0
  1774  0475  1303               	bcf	status, 6	;RP1=0, select bank0
  1775  0476  059F               	andwf	(31),f	;volatile
  1776                           	line	17
  1777                           ;ADC.c: 17: ADCON0 |= channel<<3;
  1778  0477  0874               	movf	(ADC_Read@channel),w
  1779  0478  00F2               	movwf	(??_ADC_Read+0)+0
  1780  0479  3002               	movlw	(03h)-1
  1781  047A                     u2515:
  1782  047A  1003               	clrc
  1783  047B  0DF2               	rlf	(??_ADC_Read+0)+0,f
  1784  047C  3EFF               	addlw	-1
  1785  047D  1D03               	skipz
  1786  047E  2C7A               	goto	u2515
  1787  047F  1003               	clrc
  1788  0480  0D72               	rlf	(??_ADC_Read+0)+0,w
  1789  0481  00F3               	movwf	(??_ADC_Read+1)+0
  1790  0482  0873               	movf	(??_ADC_Read+1)+0,w
  1791  0483  049F               	iorwf	(31),f	;volatile
  1792                           	line	18
  1793                           	
  1794  0484                     l4840:	
  1795                           ;ADC.c: 18: _delay((unsigned long)((2)*(4000000/4000.0)));
  1796                           	opt asmopt_off
  1797  0484  3003               movlw	3
  1798  0485  00F3               movwf	((??_ADC_Read+0)+0+1),f
  1799  0486  3097               	movlw	151
  1800  0487  00F2               movwf	((??_ADC_Read+0)+0),f
  1801  0488                     u2807:
  1802  0488  0BF2               	decfsz	((??_ADC_Read+0)+0),f
  1803  0489  2C88               	goto	u2807
  1804  048A  0BF3               	decfsz	((??_ADC_Read+0)+0+1),f
  1805  048B  2C88               	goto	u2807
  1806  048C  2C8D               	nop2
  1807                           opt asmopt_on
  1808                           
  1809                           	line	19
  1810                           	
  1811  048D                     l4842:	
  1812                           ;ADC.c: 19: GO_nDONE = 1;
  1813  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  1814  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  1815  048F  151F               	bsf	(250/8),(250)&7
  1816                           	line	20
  1817                           ;ADC.c: 20: while(GO_nDONE);
  1818  0490  2C91               	goto	l1316
  1819                           	
  1820  0491                     l1317:	
  1821                           	
  1822  0491                     l1316:	
  1823  0491  191F               	btfsc	(250/8),(250)&7
  1824  0492  2C94               	goto	u2521
  1825  0493  2C95               	goto	u2520
  1826  0494                     u2521:
  1827  0494  2C91               	goto	l1316
  1828  0495                     u2520:
  1829  0495  2C96               	goto	l4844
  1830                           	
  1831  0496                     l1318:	
  1832                           	line	21
  1833                           	
  1834  0496                     l4844:	
  1835                           ;ADC.c: 21: return ((ADRESH<<8)+ADRESL);
  1836  0496  081E               	movf	(30),w	;volatile
  1837  0497  00F2               	movwf	(??_ADC_Read+0)+0
  1838  0498  01F3               	clrf	(??_ADC_Read+0)+0+1
  1839  0499  0872               	movf	(??_ADC_Read+0)+0,w
  1840  049A  00F3               	movwf	(??_ADC_Read+0)+1
  1841  049B  01F2               	clrf	(??_ADC_Read+0)+0
  1842  049C  1683               	bsf	status, 5	;RP0=1, select bank1
  1843  049D  1303               	bcf	status, 6	;RP1=0, select bank1
  1844  049E  081E               	movf	(158)^080h,w	;volatile
  1845  049F  0772               	addwf	0+(??_ADC_Read+0)+0,w
  1846  04A0  00F0               	movwf	(?_ADC_Read)
  1847  04A1  3000               	movlw	0
  1848  04A2  1803               	skipnc
  1849  04A3  3001               	movlw	1
  1850  04A4  0773               	addwf	1+(??_ADC_Read+0)+0,w
  1851  04A5  00F1               	movwf	1+(?_ADC_Read)
  1852  04A6  2CA7               	goto	l1319
  1853                           	
  1854  04A7                     l4846:	
  1855                           	line	22
  1856                           	
  1857  04A7                     l1319:	
  1858  04A7  0008               	return
  1859                           	opt stack 0
  1860                           GLOBAL	__end_of_ADC_Read
  1861  04A8                     	__end_of_ADC_Read:
  1862 ;; =============== function _ADC_Read ends ============
  1863                           
  1864                           	signat	_ADC_Read,4218
  1865                           	global	_Write_data
  1866                           psect	text285,local,class=CODE,delta=2
  1867                           global __ptext285
  1868  03E5                     __ptext285:
  1869                           
  1870 ;; *************** function _Write_data *****************
  1871 ;; Defined at:
  1872 ;;		line 51 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  hb              1    wreg     unsigned char 
  1875 ;;  lb              1    0[COMMON] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  hb              1    3[COMMON] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;		None               void
  1880 ;; Registers used:
  1881 ;;		wreg
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1887 ;;      Params:         1       0       0       0       0
  1888 ;;      Locals:         1       0       0       0       0
  1889 ;;      Temps:          2       0       0       0       0
  1890 ;;      Totals:         4       0       0       0       0
  1891 ;;Total ram usage:        4 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;;		_Write_digits
  1898 ;;		_Write_voltage
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           psect	text285
  1902                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1903                           	line	51
  1904                           	global	__size_of_Write_data
  1905  0019                     	__size_of_Write_data	equ	__end_of_Write_data-_Write_data
  1906                           	
  1907  03E5                     _Write_data:	
  1908                           	opt	stack 5
  1909                           ; Regs used in _Write_data: [wreg]
  1910                           ;Write_data@hb stored from wreg
  1911  03E5  00F3               	movwf	(Write_data@hb)
  1912                           	line	52
  1913                           	
  1914  03E6                     l4836:	
  1915                           ;LCD.c: 52: PORTA = 0xA;
  1916  03E6  300A               	movlw	(0Ah)
  1917  03E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1918  03E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1919  03E9  0085               	movwf	(5)	;volatile
  1920                           	line	53
  1921                           ;LCD.c: 53: PORTD = hb;
  1922  03EA  0873               	movf	(Write_data@hb),w
  1923  03EB  0088               	movwf	(8)	;volatile
  1924                           	line	54
  1925                           ;LCD.c: 54: PORTA = 0x08;
  1926  03EC  3008               	movlw	(08h)
  1927  03ED  0085               	movwf	(5)	;volatile
  1928                           	line	56
  1929                           ;LCD.c: 56: PORTA = 0xA;
  1930  03EE  300A               	movlw	(0Ah)
  1931  03EF  0085               	movwf	(5)	;volatile
  1932                           	line	57
  1933                           ;LCD.c: 57: PORTD = lb;
  1934  03F0  0870               	movf	(Write_data@lb),w
  1935  03F1  0088               	movwf	(8)	;volatile
  1936                           	line	58
  1937                           ;LCD.c: 58: PORTA = 0x08;
  1938  03F2  3008               	movlw	(08h)
  1939  03F3  0085               	movwf	(5)	;volatile
  1940                           	line	60
  1941                           ;LCD.c: 60: _delay(20000);
  1942                           	opt asmopt_off
  1943  03F4  301A               movlw	26
  1944  03F5  00F2               movwf	((??_Write_data+0)+0+1),f
  1945  03F6  30F8               	movlw	248
  1946  03F7  00F1               movwf	((??_Write_data+0)+0),f
  1947  03F8                     u2817:
  1948  03F8  0BF1               	decfsz	((??_Write_data+0)+0),f
  1949  03F9  2BF8               	goto	u2817
  1950  03FA  0BF2               	decfsz	((??_Write_data+0)+0+1),f
  1951  03FB  2BF8               	goto	u2817
  1952  03FC  0064               	clrwdt
  1953                           opt asmopt_on
  1954                           
  1955                           	line	61
  1956                           	
  1957  03FD                     l1968:	
  1958  03FD  0008               	return
  1959                           	opt stack 0
  1960                           GLOBAL	__end_of_Write_data
  1961  03FE                     	__end_of_Write_data:
  1962 ;; =============== function _Write_data ends ============
  1963                           
  1964                           	signat	_Write_data,8312
  1965                           	global	_Clear_display
  1966                           psect	text286,local,class=CODE,delta=2
  1967                           global __ptext286
  1968  03D0                     __ptext286:
  1969                           
  1970 ;; *************** function _Clear_display *****************
  1971 ;; Defined at:
  1972 ;;		line 14 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;		None               void
  1979 ;; Registers used:
  1980 ;;		wreg, status,2
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1986 ;;      Params:         0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0
  1988 ;;      Temps:          2       0       0       0       0
  1989 ;;      Totals:         2       0       0       0       0
  1990 ;;Total ram usage:        2 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;;		_Init_lcd
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           psect	text286
  2000                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  2001                           	line	14
  2002                           	global	__size_of_Clear_display
  2003  0015                     	__size_of_Clear_display	equ	__end_of_Clear_display-_Clear_display
  2004                           	
  2005  03D0                     _Clear_display:	
  2006                           	opt	stack 7
  2007                           ; Regs used in _Clear_display: [wreg+status,2]
  2008                           	line	16
  2009                           	
  2010  03D0                     l4826:	
  2011                           ;LCD.c: 16: PORTA = 0x2;
  2012  03D0  3002               	movlw	(02h)
  2013  03D1  1283               	bcf	status, 5	;RP0=0, select bank0
  2014  03D2  1303               	bcf	status, 6	;RP1=0, select bank0
  2015  03D3  0085               	movwf	(5)	;volatile
  2016                           	line	17
  2017                           	
  2018  03D4                     l4828:	
  2019                           ;LCD.c: 17: PORTD = 0b0000;
  2020  03D4  0188               	clrf	(8)	;volatile
  2021                           	line	18
  2022                           	
  2023  03D5                     l4830:	
  2024                           ;LCD.c: 18: PORTA = 0x00;
  2025  03D5  0185               	clrf	(5)	;volatile
  2026                           	line	19
  2027                           ;LCD.c: 19: PORTA = 0x2;
  2028  03D6  3002               	movlw	(02h)
  2029  03D7  0085               	movwf	(5)	;volatile
  2030                           	line	20
  2031                           ;LCD.c: 20: PORTD = 0b0001;
  2032  03D8  3001               	movlw	(01h)
  2033  03D9  0088               	movwf	(8)	;volatile
  2034                           	line	21
  2035                           	
  2036  03DA                     l4832:	
  2037                           ;LCD.c: 21: PORTA = 0x00;
  2038  03DA  0185               	clrf	(5)	;volatile
  2039                           	line	22
  2040                           	
  2041  03DB                     l4834:	
  2042                           ;LCD.c: 22: _delay(20000);
  2043                           	opt asmopt_off
  2044  03DB  301A               movlw	26
  2045  03DC  00F1               movwf	((??_Clear_display+0)+0+1),f
  2046  03DD  30F8               	movlw	248
  2047  03DE  00F0               movwf	((??_Clear_display+0)+0),f
  2048  03DF                     u2827:
  2049  03DF  0BF0               	decfsz	((??_Clear_display+0)+0),f
  2050  03E0  2BDF               	goto	u2827
  2051  03E1  0BF1               	decfsz	((??_Clear_display+0)+0+1),f
  2052  03E2  2BDF               	goto	u2827
  2053  03E3  0064               	clrwdt
  2054                           opt asmopt_on
  2055                           
  2056                           	line	23
  2057                           	
  2058  03E4                     l1962:	
  2059  03E4  0008               	return
  2060                           	opt stack 0
  2061                           GLOBAL	__end_of_Clear_display
  2062  03E5                     	__end_of_Clear_display:
  2063 ;; =============== function _Clear_display ends ============
  2064                           
  2065                           	signat	_Clear_display,88
  2066                           	global	_Sound
  2067                           psect	text287,local,class=CODE,delta=2
  2068                           global __ptext287
  2069  0419                     __ptext287:
  2070                           
  2071 ;; *************** function _Sound *****************
  2072 ;; Defined at:
  2073 ;;		line 6 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\Sound.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  i               2    2[COMMON] int 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, btemp+1
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         2       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0
  2090 ;;      Totals:         4       0       0       0       0
  2091 ;;Total ram usage:        4 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           psect	text287
  2100                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\Sound.c"
  2101                           	line	6
  2102                           	global	__size_of_Sound
  2103  0028                     	__size_of_Sound	equ	__end_of_Sound-_Sound
  2104                           	
  2105  0419                     _Sound:	
  2106                           	opt	stack 7
  2107                           ; Regs used in _Sound: [wreg+status,2+btemp+1]
  2108                           	line	8
  2109                           	
  2110  0419                     l4818:	
  2111                           ;Sound.c: 8: int i = 0;
  2112  0419  01F2               	clrf	(Sound@i)
  2113  041A  01F3               	clrf	(Sound@i+1)
  2114                           	line	11
  2115                           ;Sound.c: 11: while(i < 20)
  2116  041B  2C32               	goto	l4824
  2117                           	
  2118  041C                     l2651:	
  2119                           	line	14
  2120                           ;Sound.c: 12: {
  2121                           ;Sound.c: 14: RC2 = 1;
  2122  041C  1283               	bcf	status, 5	;RP0=0, select bank0
  2123  041D  1303               	bcf	status, 6	;RP1=0, select bank0
  2124  041E  1507               	bsf	(58/8),(58)&7
  2125                           	line	17
  2126                           	
  2127  041F                     l4820:	
  2128                           ;Sound.c: 17: _delay(6000);
  2129                           	opt asmopt_off
  2130  041F  3008               movlw	8
  2131  0420  00F1               movwf	((??_Sound+0)+0+1),f
  2132  0421  30C9               	movlw	201
  2133  0422  00F0               movwf	((??_Sound+0)+0),f
  2134  0423                     u2837:
  2135  0423  0BF0               	decfsz	((??_Sound+0)+0),f
  2136  0424  2C23               	goto	u2837
  2137  0425  0BF1               	decfsz	((??_Sound+0)+0+1),f
  2138  0426  2C23               	goto	u2837
  2139  0427  2C28               	nop2
  2140                           opt asmopt_on
  2141                           
  2142                           	line	19
  2143                           	
  2144  0428                     l4822:	
  2145                           ;Sound.c: 19: RC2 = 0;
  2146  0428  1283               	bcf	status, 5	;RP0=0, select bank0
  2147  0429  1303               	bcf	status, 6	;RP1=0, select bank0
  2148  042A  1107               	bcf	(58/8),(58)&7
  2149                           	line	20
  2150                           ;Sound.c: 20: i++;
  2151  042B  3001               	movlw	low(01h)
  2152  042C  07F2               	addwf	(Sound@i),f
  2153  042D  1803               	skipnc
  2154  042E  0AF3               	incf	(Sound@i+1),f
  2155  042F  3000               	movlw	high(01h)
  2156  0430  07F3               	addwf	(Sound@i+1),f
  2157  0431  2C32               	goto	l4824
  2158                           	line	21
  2159                           	
  2160  0432                     l2650:	
  2161                           	line	11
  2162                           	
  2163  0432                     l4824:	
  2164  0432  0873               	movf	(Sound@i+1),w
  2165  0433  3A80               	xorlw	80h
  2166  0434  00FF               	movwf	btemp+1
  2167  0435  3080               	movlw	(high(014h))^80h
  2168  0436  027F               	subwf	btemp+1,w
  2169  0437  1D03               	skipz
  2170  0438  2C3B               	goto	u2505
  2171  0439  3014               	movlw	low(014h)
  2172  043A  0272               	subwf	(Sound@i),w
  2173  043B                     u2505:
  2174                           
  2175  043B  1C03               	skipc
  2176  043C  2C3E               	goto	u2501
  2177  043D  2C3F               	goto	u2500
  2178  043E                     u2501:
  2179  043E  2C1C               	goto	l2651
  2180  043F                     u2500:
  2181  043F  2C40               	goto	l2653
  2182                           	
  2183  0440                     l2652:	
  2184                           	line	22
  2185                           	
  2186  0440                     l2653:	
  2187  0440  0008               	return
  2188                           	opt stack 0
  2189                           GLOBAL	__end_of_Sound
  2190  0441                     	__end_of_Sound:
  2191 ;; =============== function _Sound ends ============
  2192                           
  2193                           	signat	_Sound,88
  2194                           	global	_Write_data_struct
  2195                           psect	text288,local,class=CODE,delta=2
  2196                           global __ptext288
  2197  03FE                     __ptext288:
  2198                           
  2199 ;; *************** function _Write_data_struct *****************
  2200 ;; Defined at:
  2201 ;;		line 64 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  chardata        1    wreg     struct byte_struct
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  chardata        1    2[COMMON] struct byte_struct
  2206 ;; Return value:  Size  Location     Type
  2207 ;;		None               void
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2215 ;;      Params:         0       0       0       0       0
  2216 ;;      Locals:         1       0       0       0       0
  2217 ;;      Temps:          2       0       0       0       0
  2218 ;;      Totals:         3       0       0       0       0
  2219 ;;Total ram usage:        3 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           psect	text288
  2228                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\LCD.c"
  2229                           	line	64
  2230                           	global	__size_of_Write_data_struct
  2231  001B                     	__size_of_Write_data_struct	equ	__end_of_Write_data_struct-_Write_data_struct
  2232                           	
  2233  03FE                     _Write_data_struct:	
  2234                           	opt	stack 7
  2235                           ; Regs used in _Write_data_struct: [wreg+status,2+status,0]
  2236                           ;Write_data_struct@chardata stored from wreg
  2237  03FE  00F2               	movwf	(Write_data_struct@chardata)
  2238                           	line	65
  2239                           	
  2240  03FF                     l4808:	
  2241                           ;LCD.c: 65: PORTA = 0xA;
  2242  03FF  300A               	movlw	(0Ah)
  2243  0400  1283               	bcf	status, 5	;RP0=0, select bank0
  2244  0401  1303               	bcf	status, 6	;RP1=0, select bank0
  2245  0402  0085               	movwf	(5)	;volatile
  2246                           	line	66
  2247                           	
  2248  0403                     l4810:	
  2249                           ;LCD.c: 66: PORTD = chardata.hb;
  2250  0403  0872               	movf	(Write_data_struct@chardata),w
  2251  0404  390F               	andlw	(1<<4)-1
  2252  0405  0088               	movwf	(8)	;volatile
  2253                           	line	67
  2254                           	
  2255  0406                     l4812:	
  2256                           ;LCD.c: 67: PORTA = 0x08;
  2257  0406  3008               	movlw	(08h)
  2258  0407  0085               	movwf	(5)	;volatile
  2259                           	line	69
  2260                           	
  2261  0408                     l4814:	
  2262                           ;LCD.c: 69: PORTA = 0xA;
  2263  0408  300A               	movlw	(0Ah)
  2264  0409  0085               	movwf	(5)	;volatile
  2265                           	line	70
  2266                           	
  2267  040A                     l4816:	
  2268                           ;LCD.c: 70: PORTD = chardata.lb;
  2269  040A  0E72               	swapf	(Write_data_struct@chardata),w
  2270  040B  390F               	andlw	(1<<4)-1
  2271  040C  0088               	movwf	(8)	;volatile
  2272                           	line	71
  2273                           ;LCD.c: 71: PORTA = 0x08;
  2274  040D  3008               	movlw	(08h)
  2275  040E  0085               	movwf	(5)	;volatile
  2276                           	line	73
  2277                           ;LCD.c: 73: _delay(20000);
  2278                           	opt asmopt_off
  2279  040F  301A               movlw	26
  2280  0410  00F1               movwf	((??_Write_data_struct+0)+0+1),f
  2281  0411  30F8               	movlw	248
  2282  0412  00F0               movwf	((??_Write_data_struct+0)+0),f
  2283  0413                     u2847:
  2284  0413  0BF0               	decfsz	((??_Write_data_struct+0)+0),f
  2285  0414  2C13               	goto	u2847
  2286  0415  0BF1               	decfsz	((??_Write_data_struct+0)+0+1),f
  2287  0416  2C13               	goto	u2847
  2288  0417  0064               	clrwdt
  2289                           opt asmopt_on
  2290                           
  2291                           	line	74
  2292                           	
  2293  0418                     l1971:	
  2294  0418  0008               	return
  2295                           	opt stack 0
  2296                           GLOBAL	__end_of_Write_data_struct
  2297  0419                     	__end_of_Write_data_struct:
  2298 ;; =============== function _Write_data_struct ends ============
  2299                           
  2300                           	signat	_Write_data_struct,4216
  2301                           	global	_Thermal_Init
  2302                           psect	text289,local,class=CODE,delta=2
  2303                           global __ptext289
  2304  04A8                     __ptext289:
  2305                           
  2306 ;; *************** function _Thermal_Init *****************
  2307 ;; Defined at:
  2308 ;;		line 2 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\Thermometer.h"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;		None               void
  2315 ;; Registers used:
  2316 ;;		wreg, status,2
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2322 ;;      Params:         0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0
  2324 ;;      Temps:          1       0       0       0       0
  2325 ;;      Totals:         1       0       0       0       0
  2326 ;;Total ram usage:        1 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_main
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           psect	text289
  2335                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\Thermometer.h"
  2336                           	line	2
  2337                           	global	__size_of_Thermal_Init
  2338  0089                     	__size_of_Thermal_Init	equ	__end_of_Thermal_Init-_Thermal_Init
  2339                           	
  2340  04A8                     _Thermal_Init:	
  2341                           	opt	stack 7
  2342                           ; Regs used in _Thermal_Init: [wreg+status,2]
  2343                           	line	4
  2344                           	
  2345  04A8                     l4758:	
  2346                           ;Thermometer.h: 4: PORTC = 0b01000;
  2347  04A8  3008               	movlw	(08h)
  2348  04A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2349  04AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2350  04AB  0087               	movwf	(7)	;volatile
  2351                           	line	5
  2352                           ;Thermometer.h: 5: _delay(1000);
  2353                           	opt asmopt_off
  2354  04AC  30F9               movlw	249
  2355  04AD  00F0               movwf	(??_Thermal_Init+0)+0,f
  2356  04AE                     u2857:
  2357  04AE  0064               	clrwdt
  2358  04AF  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2359  04B0  2CAE               	goto	u2857
  2360  04B1  2CB2               	nop2	;nop
  2361  04B2  0064               	clrwdt
  2362                           opt asmopt_on
  2363                           
  2364                           	line	6
  2365                           	
  2366  04B3                     l4760:	
  2367                           ;Thermometer.h: 6: PORTC = 0;
  2368  04B3  1283               	bcf	status, 5	;RP0=0, select bank0
  2369  04B4  1303               	bcf	status, 6	;RP1=0, select bank0
  2370  04B5  0187               	clrf	(7)	;volatile
  2371                           	line	12
  2372                           	
  2373  04B6                     l4762:	
  2374                           ;Thermometer.h: 12: PORTC = 0b10000;
  2375  04B6  3010               	movlw	(010h)
  2376  04B7  0087               	movwf	(7)	;volatile
  2377                           	line	13
  2378                           	
  2379  04B8                     l4764:	
  2380                           ;Thermometer.h: 13: PORTC = 0b11000;
  2381  04B8  3018               	movlw	(018h)
  2382  04B9  0087               	movwf	(7)	;volatile
  2383                           	line	14
  2384                           	
  2385  04BA                     l4766:	
  2386                           ;Thermometer.h: 14: _delay(1000);
  2387                           	opt asmopt_off
  2388  04BA  30F9               movlw	249
  2389  04BB  00F0               movwf	(??_Thermal_Init+0)+0,f
  2390  04BC                     u2867:
  2391  04BC  0064               	clrwdt
  2392  04BD  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2393  04BE  2CBC               	goto	u2867
  2394  04BF  2CC0               	nop2	;nop
  2395  04C0  0064               	clrwdt
  2396                           opt asmopt_on
  2397                           
  2398                           	line	15
  2399                           ;Thermometer.h: 15: PORTC = 0b00000;
  2400  04C1  1283               	bcf	status, 5	;RP0=0, select bank0
  2401  04C2  1303               	bcf	status, 6	;RP1=0, select bank0
  2402  04C3  0187               	clrf	(7)	;volatile
  2403                           	line	18
  2404                           ;Thermometer.h: 18: PORTC = 0b00000;
  2405  04C4  0187               	clrf	(7)	;volatile
  2406                           	line	19
  2407                           	
  2408  04C5                     l4768:	
  2409                           ;Thermometer.h: 19: PORTC = 0b01000;
  2410  04C5  3008               	movlw	(08h)
  2411  04C6  0087               	movwf	(7)	;volatile
  2412                           	line	20
  2413                           	
  2414  04C7                     l4770:	
  2415                           ;Thermometer.h: 20: _delay(1000);
  2416                           	opt asmopt_off
  2417  04C7  30F9               movlw	249
  2418  04C8  00F0               movwf	(??_Thermal_Init+0)+0,f
  2419  04C9                     u2877:
  2420  04C9  0064               	clrwdt
  2421  04CA  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2422  04CB  2CC9               	goto	u2877
  2423  04CC  2CCD               	nop2	;nop
  2424  04CD  0064               	clrwdt
  2425                           opt asmopt_on
  2426                           
  2427                           	line	21
  2428                           ;Thermometer.h: 21: PORTC = 0b00000;
  2429  04CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2430  04CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2431  04D0  0187               	clrf	(7)	;volatile
  2432                           	line	24
  2433                           ;Thermometer.h: 24: PORTC = 0b00000;
  2434  04D1  0187               	clrf	(7)	;volatile
  2435                           	line	25
  2436                           	
  2437  04D2                     l4772:	
  2438                           ;Thermometer.h: 25: PORTC = 0b01000;
  2439  04D2  3008               	movlw	(08h)
  2440  04D3  0087               	movwf	(7)	;volatile
  2441                           	line	26
  2442                           	
  2443  04D4                     l4774:	
  2444                           ;Thermometer.h: 26: _delay(1000);
  2445                           	opt asmopt_off
  2446  04D4  30F9               movlw	249
  2447  04D5  00F0               movwf	(??_Thermal_Init+0)+0,f
  2448  04D6                     u2887:
  2449  04D6  0064               	clrwdt
  2450  04D7  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2451  04D8  2CD6               	goto	u2887
  2452  04D9  2CDA               	nop2	;nop
  2453  04DA  0064               	clrwdt
  2454                           opt asmopt_on
  2455                           
  2456                           	line	27
  2457                           ;Thermometer.h: 27: PORTC = 0b00000;
  2458  04DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2459  04DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2460  04DD  0187               	clrf	(7)	;volatile
  2461                           	line	31
  2462                           	
  2463  04DE                     l4776:	
  2464                           ;Thermometer.h: 31: PORTC = 0b10000;
  2465  04DE  3010               	movlw	(010h)
  2466  04DF  0087               	movwf	(7)	;volatile
  2467                           	line	32
  2468                           	
  2469  04E0                     l4778:	
  2470                           ;Thermometer.h: 32: PORTC = 0b11000;
  2471  04E0  3018               	movlw	(018h)
  2472  04E1  0087               	movwf	(7)	;volatile
  2473                           	line	33
  2474                           	
  2475  04E2                     l4780:	
  2476                           ;Thermometer.h: 33: _delay(1000);
  2477                           	opt asmopt_off
  2478  04E2  30F9               movlw	249
  2479  04E3  00F0               movwf	(??_Thermal_Init+0)+0,f
  2480  04E4                     u2897:
  2481  04E4  0064               	clrwdt
  2482  04E5  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2483  04E6  2CE4               	goto	u2897
  2484  04E7  2CE8               	nop2	;nop
  2485  04E8  0064               	clrwdt
  2486                           opt asmopt_on
  2487                           
  2488                           	line	34
  2489                           	
  2490  04E9                     l4782:	
  2491                           ;Thermometer.h: 34: PORTC = 0b00000;
  2492  04E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2493  04EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2494  04EB  0187               	clrf	(7)	;volatile
  2495                           	line	37
  2496                           ;Thermometer.h: 37: PORTC = 0b10000;
  2497  04EC  3010               	movlw	(010h)
  2498  04ED  0087               	movwf	(7)	;volatile
  2499                           	line	38
  2500                           ;Thermometer.h: 38: PORTC = 0b01000;
  2501  04EE  3008               	movlw	(08h)
  2502  04EF  0087               	movwf	(7)	;volatile
  2503                           	line	39
  2504                           ;Thermometer.h: 39: _delay(1000);
  2505                           	opt asmopt_off
  2506  04F0  30F9               movlw	249
  2507  04F1  00F0               movwf	(??_Thermal_Init+0)+0,f
  2508  04F2                     u2907:
  2509  04F2  0064               	clrwdt
  2510  04F3  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2511  04F4  2CF2               	goto	u2907
  2512  04F5  2CF6               	nop2	;nop
  2513  04F6  0064               	clrwdt
  2514                           opt asmopt_on
  2515                           
  2516                           	line	40
  2517                           	
  2518  04F7                     l4784:	
  2519                           ;Thermometer.h: 40: PORTC = 0b00000;
  2520  04F7  1283               	bcf	status, 5	;RP0=0, select bank0
  2521  04F8  1303               	bcf	status, 6	;RP1=0, select bank0
  2522  04F9  0187               	clrf	(7)	;volatile
  2523                           	line	43
  2524                           	
  2525  04FA                     l4786:	
  2526                           ;Thermometer.h: 43: PORTC = 0b00000;
  2527  04FA  0187               	clrf	(7)	;volatile
  2528                           	line	44
  2529                           ;Thermometer.h: 44: PORTC = 0b01000;
  2530  04FB  3008               	movlw	(08h)
  2531  04FC  0087               	movwf	(7)	;volatile
  2532                           	line	45
  2533                           ;Thermometer.h: 45: _delay(1000);
  2534                           	opt asmopt_off
  2535  04FD  30F9               movlw	249
  2536  04FE  00F0               movwf	(??_Thermal_Init+0)+0,f
  2537  04FF                     u2917:
  2538  04FF  0064               	clrwdt
  2539  0500  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2540  0501  2CFF               	goto	u2917
  2541  0502  2D03               	nop2	;nop
  2542  0503  0064               	clrwdt
  2543                           opt asmopt_on
  2544                           
  2545                           	line	46
  2546                           	
  2547  0504                     l4788:	
  2548                           ;Thermometer.h: 46: PORTC = 0b00000;
  2549  0504  1283               	bcf	status, 5	;RP0=0, select bank0
  2550  0505  1303               	bcf	status, 6	;RP1=0, select bank0
  2551  0506  0187               	clrf	(7)	;volatile
  2552                           	line	49
  2553                           	
  2554  0507                     l4790:	
  2555                           ;Thermometer.h: 49: PORTC = 0b10000;
  2556  0507  3010               	movlw	(010h)
  2557  0508  0087               	movwf	(7)	;volatile
  2558                           	line	50
  2559                           	
  2560  0509                     l4792:	
  2561                           ;Thermometer.h: 50: PORTC = 0b11000;
  2562  0509  3018               	movlw	(018h)
  2563  050A  0087               	movwf	(7)	;volatile
  2564                           	line	51
  2565                           	
  2566  050B                     l4794:	
  2567                           ;Thermometer.h: 51: _delay(1000);
  2568                           	opt asmopt_off
  2569  050B  30F9               movlw	249
  2570  050C  00F0               movwf	(??_Thermal_Init+0)+0,f
  2571  050D                     u2927:
  2572  050D  0064               	clrwdt
  2573  050E  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2574  050F  2D0D               	goto	u2927
  2575  0510  2D11               	nop2	;nop
  2576  0511  0064               	clrwdt
  2577                           opt asmopt_on
  2578                           
  2579                           	line	52
  2580                           ;Thermometer.h: 52: PORTC = 0b00000;
  2581  0512  1283               	bcf	status, 5	;RP0=0, select bank0
  2582  0513  1303               	bcf	status, 6	;RP1=0, select bank0
  2583  0514  0187               	clrf	(7)	;volatile
  2584                           	line	55
  2585                           	
  2586  0515                     l4796:	
  2587                           ;Thermometer.h: 55: PORTC = 0b10000;
  2588  0515  3010               	movlw	(010h)
  2589  0516  0087               	movwf	(7)	;volatile
  2590                           	line	56
  2591                           	
  2592  0517                     l4798:	
  2593                           ;Thermometer.h: 56: PORTC = 0b11000;
  2594  0517  3018               	movlw	(018h)
  2595  0518  0087               	movwf	(7)	;volatile
  2596                           	line	57
  2597                           	
  2598  0519                     l4800:	
  2599                           ;Thermometer.h: 57: _delay(1000);
  2600                           	opt asmopt_off
  2601  0519  30F9               movlw	249
  2602  051A  00F0               movwf	(??_Thermal_Init+0)+0,f
  2603  051B                     u2937:
  2604  051B  0064               	clrwdt
  2605  051C  0BF0               decfsz	(??_Thermal_Init+0)+0,f
  2606  051D  2D1B               	goto	u2937
  2607  051E  2D1F               	nop2	;nop
  2608  051F  0064               	clrwdt
  2609                           opt asmopt_on
  2610                           
  2611                           	line	58
  2612                           	
  2613  0520                     l4802:	
  2614                           ;Thermometer.h: 58: PORTC = 0b10000;
  2615  0520  3010               	movlw	(010h)
  2616  0521  1283               	bcf	status, 5	;RP0=0, select bank0
  2617  0522  1303               	bcf	status, 6	;RP1=0, select bank0
  2618  0523  0087               	movwf	(7)	;volatile
  2619                           	line	61
  2620                           	
  2621  0524                     l4804:	
  2622                           ;Thermometer.h: 61: TRISC = 0b01000;
  2623  0524  3008               	movlw	(08h)
  2624  0525  1683               	bsf	status, 5	;RP0=1, select bank1
  2625  0526  1303               	bcf	status, 6	;RP1=0, select bank1
  2626  0527  0087               	movwf	(135)^080h	;volatile
  2627                           	line	62
  2628                           	
  2629  0528                     l4806:	
  2630                           ;Thermometer.h: 62: PORTC = 0b01000;
  2631  0528  3008               	movlw	(08h)
  2632  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  2633  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  2634  052B  0087               	movwf	(7)	;volatile
  2635                           	line	63
  2636                           ;Thermometer.h: 63: PORTC = 0b00000;
  2637  052C  0187               	clrf	(7)	;volatile
  2638                           	line	66
  2639                           ;Thermometer.h: 66: TRISC = 0b0;
  2640  052D  1683               	bsf	status, 5	;RP0=1, select bank1
  2641  052E  1303               	bcf	status, 6	;RP1=0, select bank1
  2642  052F  0187               	clrf	(135)^080h	;volatile
  2643                           	line	67
  2644                           	
  2645  0530                     l661:	
  2646  0530  0008               	return
  2647                           	opt stack 0
  2648                           GLOBAL	__end_of_Thermal_Init
  2649  0531                     	__end_of_Thermal_Init:
  2650 ;; =============== function _Thermal_Init ends ============
  2651                           
  2652                           	signat	_Thermal_Init,88
  2653                           	global	_ADC_Init
  2654                           psect	text290,local,class=CODE,delta=2
  2655                           global __ptext290
  2656  03C7                     __ptext290:
  2657                           
  2658 ;; *************** function _ADC_Init *****************
  2659 ;; Defined at:
  2660 ;;		line 7 in file "C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\ADC.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;		None               void
  2667 ;; Registers used:
  2668 ;;		wreg
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           psect	text290
  2687                           	file	"C:\Users\Mads\Documents\GitHub\MPLAB_LCD_SCHOOL_PROJECT\Simple LCD\ADC.c"
  2688                           	line	7
  2689                           	global	__size_of_ADC_Init
  2690  0009                     	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  2691                           	
  2692  03C7                     _ADC_Init:	
  2693                           	opt	stack 7
  2694                           ; Regs used in _ADC_Init: [wreg]
  2695                           	line	8
  2696                           	
  2697  03C7                     l4756:	
  2698                           ;ADC.c: 8: ADCON0 = 0x41;
  2699  03C7  3041               	movlw	(041h)
  2700  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2701  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2702  03CA  009F               	movwf	(31)	;volatile
  2703                           	line	9
  2704                           ;ADC.c: 9: ADCON1 = 0xC0;
  2705  03CB  30C0               	movlw	(0C0h)
  2706  03CC  1683               	bsf	status, 5	;RP0=1, select bank1
  2707  03CD  1303               	bcf	status, 6	;RP1=0, select bank1
  2708  03CE  009F               	movwf	(159)^080h	;volatile
  2709                           	line	11
  2710                           	
  2711  03CF                     l1313:	
  2712  03CF  0008               	return
  2713                           	opt stack 0
  2714                           GLOBAL	__end_of_ADC_Init
  2715  03D0                     	__end_of_ADC_Init:
  2716 ;; =============== function _ADC_Init ends ============
  2717                           
  2718                           	signat	_ADC_Init,88
  2719                           psect	text291,local,class=CODE,delta=2
  2720                           global __ptext291
  2721  0000                     __ptext291:
  2722                           	global	btemp
  2723  007E                     	btemp set 07Eh
  2724                           
  2725                           	DABS	1,126,2	;btemp
  2726                           	global	wtemp0
  2727  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Nov 05 14:12:58 2013

                           _a 0020                            _RD 0C60                            _WR 0C61  
       __end_of_Clear_display 03E5                           l661 0530                           l670 0601  
                         l664 0557                           l665 057B                           l666 058B  
                         l667 05FF                           l668 0600                           l669 0601  
                         _GIE 005F                           _RB0 0030                           _RA4 002C  
                         _RC2 003A                          l2000 077E                          l2001 07FD  
                        l2002 07B0                          l2003 07FC                          l2004 07E2  
                        l2005 07FB                          l2006 07FA                          l2007 07FF  
                        l1313 03CF                          l1316 0491                          l1317 0491  
                        l1318 0496                          l1319 04A7                          l2650 0432  
                        l2651 041C                          l2652 0440                          l2653 0440  
                        l1962 03E4                          l1971 0418                          l1980 066E  
                        l1965 046F                          l1981 06F7                          l1990 06E5  
                        l1982 0686                          l1974 0626                          l1975 06FA  
                        l1983 06F6                          l1991 06F2                          l4800 0519  
                        l1968 03FD                          l1992 06F1                          l1984 069E  
                        l1976 063E                          l1977 06F9                          l1985 06F5  
                        l1993 06FA                          l4802 0520                          l4810 0403  
                        l1986 06B6                          l1978 0656                          l1979 06F8  
                        l1987 06F4                          l4804 0524                          l4812 0406  
                        l4820 041F                          l1988 06CE                          l4900 06C3  
                        l1996 071B                          l1989 06F3                          l1997 07FF  
                        l4806 0528                          l4814 0408                          l4822 0428  
                        l4830 03D5                          l4902 06CE                          l1998 074C  
                        l4910 0708                          l1999 07FE                          l4760 04B3  
                        l4816 040A                          l4808 03FF                          l4824 0432  
                        l4832 03DA                          l4840 0484                          l4904 06DB  
                        l4920 073E                          l4912 070F                          l4770 04C7  
                        l4762 04B6                          l4818 0419                          l4834 03DB  
                        l4826 03D0                          l4842 048D                          l4850 0447  
                        l4906 06E9                          l4930 077E                          l4922 074C  
                        l4914 071B                          l4756 03C7                          l4780 04E2  
                        l4772 04D2                          l4764 04B8                          l4828 03D4  
                        l4836 03E6                          l4844 0496                          l4860 045B  
                        l4852 0448                          l4940 07BD                          l4932 078B  
                        l4924 0759                          l4916 0728                          l4908 06FB  
                        l4790 0507                          l4782 04E9                          l4774 04D4  
                        l4766 04BA                          l4758 04A8                          l4846 04A7  
                        l4838 0471                          l4862 0460                          l4854 044A  
                        l4870 060E                          l4942 07CA                          l4934 0798  
                        l4926 0766                          l4918 0735                          l4950 0531  
                        l4792 0509                          l4784 04F7                          l4776 04DE  
                        l4768 04C5                          l4864 0461                          l4856 044C  
                        l4848 0441                          l4880 064B                          l4872 061B  
                        l4944 07D4                          l4936 07A2                          l4928 0770  
                        l4960 0545                          l4952 0539                          l4794 050B  
                        l4786 04FA                          l4778 04E0                          l4866 046A  
                        l4858 045A                          l4890 0686                          l4882 0656  
                        l4874 0626                          l4946 07E2                          l4938 07B0  
                        l4970 055D                          l4962 054A                          l4954 053C  
                        l4796 0515                          l4788 0504                          l4892 0693  
                        l4884 0663                          l4876 0633                          l4868 0604  
                        l4948 07EF                          l4972 0563                          l4980 057B  
                        l4964 054F                          l4956 0540                          l4798 0517  
                        l4894 069E                          l4886 066E                          l4878 063E  
                        l4990 05E5                          l4982 0582                          l4974 056B  
                        l4966 0554                          l4958 0544                          l4896 06AB  
                        l4888 067B                          l4992 05F3                          l4984 0588  
                        l4976 0571                          l4968 0557                          l4898 06B6  
                        l4986 058B                          l4978 0576                          l4988 0591  
                        u2500 043F                          u2501 043E                          u2520 0495  
                        u2600 06C3                          u2505 043B                          u2521 0494  
                        u2601 06C2                          u2610 06DB                          u2530 061B  
                        u2515 047A                          u2611 06DA                          u2531 061A  
                        u2620 06E9                          u2540 0633                          u2700 07BD  
                        u2621 06E8                          u2605 06BF                          u2541 0632  
                        u2701 07BC                          u2550 064B                          u2710 07CA  
                        u2630 0708                          u2615 06D7                          u2551 064A  
                        u2535 0617                          u2711 07C9                          u2631 0707  
                        u2560 0663                          u2720 07EF                          u2640 0728  
                        u2561 0662                          u2545 062F                          u2721 07EE  
                        u2705 07B9                          u2641 0727                          u2570 067B  
                        u2650 0735                          u2730 055D                          u2571 067A  
                        u2555 0647                          u2715 07C6                          u2651 0734  
                        u2635 0704                          u2731 055C                          u2580 0693  
                        u2660 0759                          u2740 0563                          u2581 0692  
                        u2565 065F                          u2725 07EB                          u2661 0758  
                        u2645 0724                          u2741 0562                          u2590 06AB  
                        u2670 0766                          u2750 0582                          u2807 0488  
                        u2591 06AA                          u2575 0677                          u2671 0765  
                        u2655 0731                          u2751 0581                          u2680 078B  
                        u2760 0588                          u2817 03F8                          u2585 068F  
                        u2681 078A                          u2665 0755                          u2761 0587  
                        u2690 0798                          u2770 0591                          u2907 04F2  
                        u2827 03DF                          u2595 06A7                          u2691 0797  
                        u2675 0762                          u2771 0590                          u2917 04FF  
                        u2837 0423                          u2685 0787                          u2927 050D  
                        u2847 0413                          u2695 0794                          u2937 051B  
                        u2857 04AE                          u2867 04BC                          u2787 0451  
                        u2877 04C9                          u2797 0465                          u2887 04D6  
                        u2897 04E4                          _WREN 0C62                          _main 0531  
                        btemp 007E              __end_of_ADC_Init 03D0              __end_of_ADC_Read 04A8  
                        start 0000         __size_of_Write_digits 00F7                         ?_main 0070  
                       _EEADR 010D                         _CARRY 0018                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _TRISA 0085                         _TRISB 0086                         _TRISC 0087  
                       _TRISD 0088                         _Sound 0419                  _Write_digits 0604  
                       status 0003                         wtemp0 007E                  __end_of_main 0604  
      __size_of_Write_voltage 0105              __end_of_Init_lcd 0470                        ??_main 007A  
                      ?_Sound 0070                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D                        Sound@i 0072  
             ADC_Read@channel 0074     Write_data_struct@chardata 0072                     ?_ADC_Init 0070  
                   ?_ADC_Read 0070                 _Write_voltage 06FB   Write_digits@adc_measurement 0074  
              __pcstackCOMMON 0070                 __end_of_Sound 0441                    _Write_data 03E5  
                  ??_ADC_Init 0070                    ??_ADC_Read 0072                       ??_Sound 0070  
              ?_Write_voltage 0077                    __pbssBANK0 0020                     ?_Init_lcd 0070  
                  __pmaintext 0531                 ?_Thermal_Init 0070                  Write_data@hb 0073  
                Write_data@lb 0070                    ??_Init_lcd 0072        __size_of_Clear_display 0015  
              ??_Thermal_Init 0070                   ?_Write_data 0070               ??_Write_voltage 0079  
        end_of_initialization 03C3             _Write_data_struct 03FE            ?_Write_data_struct 0070  
               _Clear_display 03D0           ??_Write_data_struct 0070             __size_of_ADC_Init 0009  
           __size_of_ADC_Read 0038           __size_of_Write_data 0019                    main@char_c 007B  
   __end_of_Write_data_struct 0419                ?_Clear_display 0070           start_initialization 03C1  
             main@charWritten 007C          __end_of_Thermal_Init 0531             __size_of_Init_lcd 002F  
Write_voltage@adc_measurement 0077                 ?_Write_digits 0074    __size_of_Write_data_struct 001B  
                   __ptext280 0000                     __ptext281 06FB                     __ptext290 03C7  
                   __ptext282 0604                     __ptext291 0000                     __ptext283 0441  
                   __ptext284 0470                     __ptext285 03E5                     __ptext286 03D0  
                   __ptext287 0419                     __ptext288 03FE                     __ptext289 04A8  
                ??_Write_data 0071               ??_Clear_display 0070                      _ADC_Init 03C7  
                    _ADC_Read 0470                __size_of_Sound 0028                ??_Write_digits 0076  
          __end_of_Write_data 03FE                      _GO_nDONE 00FA         __size_of_Thermal_Init 0089  
       __end_of_Write_voltage 0800                      _Init_lcd 0441                  _Thermal_Init 04A8  
               __size_of_main 00D3          __end_of_Write_digits 06FB  
